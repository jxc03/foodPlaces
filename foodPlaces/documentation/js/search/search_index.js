var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.103,1,0.665]],["body/components/AppComponent.html",[0,0.16,1,1.102,2,0.912,3,0.678,4,0.559,5,0.966,6,0.966,7,0.966,8,0.559,9,1.99,10,0.966,11,1.852,12,1.03,13,2.191,14,1.539,15,0.912,16,1.539,17,2.475,18,1.102,19,1.32,20,1.32,21,1.32,22,1.32,23,1.32,24,1.32,25,1.298,26,3.412,27,2.676,28,3.412,29,0.678,30,0.912,31,3.855,32,4.302,33,1.829,34,3.233,35,1.467,36,2.537,37,1.36,38,0.068,39,1.629,40,0.912,41,2.066,42,1.298,43,1.539,44,2.537,45,2.676,46,2.537,47,1.259,48,0.559,49,1.36,50,1.99,51,1.99,52,2.537,53,2.537,54,2.537,55,2.537,56,2.537,57,2.537,58,2.537,59,0.678,60,0.678,61,2.537,62,3.412,63,0.966,64,1.298,65,1.298,66,0.966,67,1.569,68,0.966,69,0.912,70,0.966,71,0.966,72,0.678,73,0.966,74,0.966,75,0.678,76,0.966,77,0.966,78,0.966,79,0.966,80,0.812,81,0.966,82,0.966,83,0.678,84,0.966,85,0.966,86,0.966,87,0.966,88,0.678,89,0.966,90,0.812,91,0.966,92,0.046,93,0.046]],["title/components/AuthButtonComponent.html",[0,0.103,72,0.665]],["body/components/AuthButtonComponent.html",[0,0.165,1,0.718,2,0.947,3,0.718,4,0.592,5,1.022,6,1.022,7,1.022,8,0.592,10,1.022,11,1.865,12,0.718,14,1.599,15,0.947,16,1.599,18,0.718,19,0.86,20,0.86,21,0.86,22,0.86,23,0.86,24,0.86,25,1.349,29,0.718,30,0.947,35,1.509,38,0.068,40,1.06,47,1.172,48,0.592,59,0.718,60,0.718,63,1.022,64,1.349,65,1.349,66,1.022,67,1.605,68,1.022,69,1.06,70,1.022,71,1.022,72,1.127,73,1.774,74,1.022,75,0.718,76,1.022,77,1.022,78,1.022,79,1.022,80,0.86,81,1.022,82,1.022,83,0.718,84,1.022,85,1.022,86,1.022,87,1.022,88,0.718,89,1.022,90,0.86,91,1.022,92,0.048,93,0.048,94,2.106,95,3.544,96,3.111,97,3.111,98,3.544,99,3.531,100,4.716,101,1.212,102,2.686,103,3.438,104,2.686,105,1.212,106,1.212,107,3.544,108,2.686,109,2.686,110,2.686,111,1.725,112,1.212,113,2.547,114,2.686,115,3.308,116,3.544]],["title/components/AuthUserComponent.html",[0,0.103,75,0.665]],["body/components/AuthUserComponent.html",[0,0.166,1,0.725,2,0.954,3,0.725,4,0.598,5,1.033,6,1.033,7,1.033,8,0.598,10,1.033,11,1.867,12,0.725,14,1.61,15,0.954,16,1.61,18,0.725,19,0.869,20,0.869,21,0.869,22,0.869,23,0.869,24,0.869,25,1.358,29,0.725,30,0.954,35,1.358,38,0.068,40,0.954,47,1.132,48,0.598,59,0.725,60,0.725,63,1.033,64,1.358,65,1.358,66,1.033,67,1.612,68,1.033,69,1.176,70,1.033,71,1.033,72,0.725,73,1.674,74,1.033,75,1.132,76,1.798,77,1.033,78,1.033,79,1.033,80,0.869,81,1.033,82,1.033,83,0.725,84,1.033,85,1.033,86,1.033,87,1.033,88,0.725,89,1.033,90,0.869,91,1.033,92,0.048,93,0.048,96,3.126,97,3.126,99,2.798,101,1.224,103,3.45,105,1.224,106,1.224,111,1.743,112,1.224,113,2.291,117,2.129,118,3.569,119,3.569,120,2.714,121,2.714,122,2.714,123,2.714,124,3.569,125,2.291,126,3.569,127,2.798,128,3.569]],["title/injectables/DataService.html",[129,1.122,130,1.333]],["body/injectables/DataService.html",[3,0.236,4,0.195,8,0.195,13,0.567,15,1.011,29,0.529,30,0.404,33,0.81,35,1.284,37,2.167,38,0.069,39,0.567,40,0.863,41,2.301,42,0.891,43,0.893,47,0.404,48,0.195,50,2.645,51,0.693,59,0.236,60,0.236,69,0.819,92,0.02,93,0.02,101,1.187,105,1.383,106,1.383,115,1.185,125,1.271,127,0.693,129,0.681,130,1.255,131,0.567,132,0.693,133,1.552,134,1.185,135,1.185,136,1.511,137,1.979,138,1.511,139,0.97,140,1.271,141,1.511,142,1.511,143,1.511,144,2.632,145,4.584,146,4.325,147,1.511,148,1.511,149,1.511,150,1.511,151,2.826,152,0.883,153,1.511,154,2.249,155,3.103,156,2.868,157,2.342,158,1.511,159,2.342,160,4.043,161,2.686,162,2.249,163,2.901,164,2.757,165,3.373,166,3.065,167,2.868,168,3.065,169,3.783,170,1.185,171,2.064,172,0.883,173,1.511,174,2.868,175,1.271,176,3.231,177,1.511,178,0.883,179,1.511,180,3.281,181,1.841,182,0.883,183,1.979,184,2.632,185,1.552,186,2.521,187,3.367,188,0.883,189,0.883,190,0.883,191,0.883,192,2.064,193,1.271,194,1.979,195,2.868,196,2.632,197,1.552,198,1.511,199,0.883,200,1.511,201,1.511,202,3.699,203,2.632,204,2.342,205,1.511,206,1.771,207,1.552,208,1.979,209,1.185,210,0.883,211,1.511,212,1.741,213,1.511,214,1.511,215,2.868,216,1.979,217,1.511,218,0.883,219,1.511,220,2.429,221,2.245,222,1.185,223,1.185,224,0.693,225,0.883,226,0.883,227,0.883,228,3.312,229,2.632,230,1.841,231,2.632,232,2.632,233,0.883,234,0.883,235,2.868,236,2.735,237,2.342,238,0.883,239,0.883,240,1.979,241,0.693,242,1.511,243,0.883,244,0.883,245,3.231,246,0.883,247,1.511,248,0.883,249,1.874,250,1.511,251,1.511,252,1.511,253,2.645,254,0.883,255,2.632,256,1.185,257,0.693,258,0.883,259,0.883,260,0.883,261,0.883,262,0.883,263,0.883,264,1.511,265,0.883,266,0.883,267,1.511,268,0.883,269,1.511,270,0.883,271,0.883,272,1.511,273,2.632,274,0.883,275,0.883,276,2.342,277,0.883,278,0.883,279,0.693,280,0.883,281,0.693,282,2.645,283,0.883,284,0.883,285,0.883,286,0.883,287,0.883,288,0.883,289,0.883,290,0.883,291,0.567,292,0.693,293,0.693,294,0.693,295,0.883,296,1.979,297,1.511,298,0.883,299,0.97,300,0.693,301,1.185,302,1.979,303,0.883,304,0.883,305,0.883,306,1.979,307,1.979,308,1.979,309,1.979,310,1.979,311,1.979,312,0.883,313,0.883,314,1.511,315,0.883,316,0.883,317,0.883,318,0.883,319,1.837,320,2.342,321,1.979,322,0.883,323,0.883,324,0.883,325,1.979,326,1.979,327,0.883,328,1.511,329,0.883,330,1.511,331,2.632,332,0.883,333,0.883,334,0.883,335,0.883,336,1.979,337,1.979,338,1.979,339,1.979,340,1.511,341,1.511,342,1.511,343,1.511,344,0.883,345,0.883,346,0.883,347,0.693,348,0.883,349,2.342,350,1.511,351,1.511,352,2.342,353,1.511,354,2.342,355,1.511,356,0.883,357,0.883,358,1.511,359,0.883,360,1.511,361,0.883,362,0.693,363,0.693,364,0.883,365,0.883,366,1.511,367,0.883,368,0.883,369,0.883,370,1.511,371,1.511,372,1.511,373,1.511,374,1.511,375,1.511,376,1.979,377,0.883,378,0.883,379,0.693,380,1.511,381,1.511,382,0.883,383,0.883]],["title/components/HomeComponent.html",[0,0.103,83,0.665]],["body/components/HomeComponent.html",[0,0.173,1,0.79,2,1.008,3,0.79,4,0.651,5,1.125,6,1.125,7,1.125,8,0.651,10,1.125,11,1.886,12,0.79,14,1.701,15,1.008,16,1.701,17,2.667,18,0.79,19,0.946,20,0.946,21,0.946,22,0.946,23,0.946,24,0.946,25,1.435,27,2.958,38,0.067,47,1.169,48,0.651,49,1.584,59,0.79,60,0.79,63,1.125,64,1.435,65,1.435,66,1.125,67,1.665,68,1.125,69,1.008,70,1.125,71,1.125,72,1.169,73,1.125,74,1.125,75,1.169,76,1.125,77,1.125,78,1.125,79,1.125,80,0.946,81,1.125,82,1.125,83,1.169,84,1.125,85,1.125,86,1.125,87,1.125,88,0.79,89,1.125,90,0.946,91,1.125,92,0.051,93,0.051,206,1.701,384,2.318,385,2.958,386,3.772,387,3.772,388,2.318,389,2.318,390,2.958]],["title/components/NavComponent.html",[0,0.103,18,0.665]],["body/components/NavComponent.html",[0,0.17,1,0.764,2,0.986,3,0.764,4,0.63,5,1.088,6,1.088,7,1.088,8,0.63,10,1.088,11,1.879,12,0.764,14,1.665,15,0.986,16,1.665,17,2.625,18,1.154,19,0.915,20,0.915,21,0.915,22,0.915,23,0.915,24,0.915,25,1.405,38,0.067,47,1.154,48,0.63,49,1.532,59,0.764,60,0.764,63,1.088,64,1.405,65,1.405,66,1.088,67,1.644,68,1.088,69,0.986,70,1.088,71,1.088,72,1.154,73,1.088,74,1.088,75,1.154,76,1.088,77,1.088,78,1.088,79,1.088,80,0.915,81,1.088,82,1.088,83,0.764,84,1.088,85,1.088,86,1.088,87,1.088,88,0.764,89,1.088,90,0.915,91,1.088,92,0.05,93,0.05,206,1.665,385,2.895,388,2.242,389,2.242,390,2.895,391,2.242,392,3.691,393,4.088,394,3.691,395,3.691,396,3.691,397,3.691,398,3.691,399,3.691,400,3.691,401,3.691,402,2.37]],["title/components/TestWSComponent.html",[0,0.103,88,0.665]],["body/components/TestWSComponent.html",[0,0.134,1,0.488,2,0.723,3,0.488,4,0.402,5,0.695,6,0.695,7,0.695,8,0.402,10,0.695,11,1.764,12,0.488,18,0.488,19,0.585,20,0.585,21,0.585,22,0.585,23,0.585,24,0.585,25,1.029,29,0.488,30,0.723,33,1.449,34,2.792,35,1.609,37,2.037,38,0.069,39,2.44,40,0.951,41,1.908,42,1.029,43,1.22,47,0.86,48,0.402,59,0.488,60,0.488,63,0.695,64,1.029,65,1.029,66,0.695,67,1.355,68,0.695,69,0.951,70,0.695,71,0.695,72,0.488,73,0.695,74,0.695,75,0.488,76,1.029,77,0.695,78,0.695,79,0.695,80,0.585,81,0.695,82,0.695,83,0.488,84,0.695,85,0.695,86,0.695,87,0.695,88,0.951,89,1.225,90,0.585,91,0.695,92,0.036,93,0.036,101,0.824,105,0.824,106,0.824,130,2.133,139,1.173,140,2.927,155,1.736,161,1.173,164,1.736,175,1.736,181,2.068,206,0.824,220,1.173,221,1.736,230,1.173,236,2.44,241,2.121,249,0.979,253,1.432,281,1.432,291,1.173,299,1.173,301,2.121,347,3.66,402,2.44,403,1.826,404,1.432,405,2.704,406,3.22,407,2.704,408,3.8,409,3.56,410,3.56,411,3.56,412,3.56,413,1.826,414,2.207,415,2.704,416,1.826,417,1.826,418,1.826,419,1.826,420,1.826,421,2.704,422,1.826,423,1.826,424,1.826,425,1.432,426,1.826,427,1.826,428,1.826,429,1.826,430,1.432,431,1.826,432,1.826,433,1.826,434,1.826,435,1.826,436,2.704,437,1.432,438,1.826,439,1.826,440,3.56,441,4.668,442,1.826,443,1.826,444,2.704,445,3.56,446,1.826,447,1.826,448,3.98,449,1.826,450,1.826,451,3.56,452,2.704,453,3.22,454,2.704,455,1.432,456,1.826,457,1.826,458,1.826,459,2.704,460,1.826,461,1.826,462,3.22,463,2.792,464,1.432,465,1.826,466,1.826,467,1.826,468,2.704,469,1.826,470,2.704,471,1.826,472,1.826,473,1.826,474,1.826,475,1.826,476,1.826,477,1.826,478,1.826,479,1.826,480,1.826,481,1.826,482,1.826,483,1.826,484,1.826,485,4.229]],["title/injectables/WebService.html",[129,1.122,414,1.333]],["body/injectables/WebService.html",[3,0.361,4,0.298,8,0.298,13,0.868,15,0.574,29,0.361,30,0.574,33,1.15,35,1.542,37,2.119,38,0.069,40,1.169,41,2.648,42,1.262,43,1.204,47,0.713,48,0.298,59,0.361,60,0.361,69,1.026,92,0.029,93,0.029,101,0.61,105,1.898,106,1.898,125,1.378,129,0.968,131,0.868,133,2.094,134,1.684,135,1.684,139,1.378,140,1.714,151,2.768,154,1.06,155,2.465,161,2.376,162,1.684,163,2.601,164,2.266,170,1.684,171,2.601,175,1.378,180,3.178,181,2.742,185,1.684,186,2.655,187,2.768,192,2.902,193,2.266,197,1.684,206,1.898,207,1.684,209,1.684,212,1.496,220,1.378,221,2.602,222,1.684,223,1.06,224,1.06,228,3.243,230,1.714,236,2.129,249,1.15,282,2.601,291,1.378,292,1.06,293,1.06,294,1.06,299,1.378,300,1.06,319,2.384,362,1.06,363,1.06,379,1.06,414,1.15,425,1.06,430,3.243,437,1.684,455,1.684,463,3.349,464,1.684,486,1.06,487,2.67,488,2.147,489,1.352,490,3.04,491,2.147,492,3.04,493,2.147,494,1.352,495,4.528,496,2.147,497,1.352,498,1.352,499,2.67,500,1.352,501,3.04,502,2.147,503,1.352,504,2.67,505,1.352,506,2.147,507,3.316,508,2.147,509,3.316,510,1.352,511,2.147,512,1.352,513,1.352,514,1.06,515,1.352,516,2.147,517,3.53,518,1.352,519,4.208,520,2.147,521,3.04,522,2.147,523,2.147,524,2.147,525,2.147,526,2.147,527,2.147,528,3.53,529,2.147,530,3.53,531,3.04,532,2.147,533,2.147,534,2.147,535,1.352,536,3.04,537,2.147,538,1.352,539,1.352,540,3.04,541,2.147,542,1.352,543,3.04,544,2.147,545,1.352,546,2.147,547,2.147,548,2.147,549,2.147,550,1.352,551,1.352,552,2.147,553,2.147,554,2.094,555,1.352,556,1.352,557,1.352,558,2.147,559,1.352,560,2.147,561,1.352,562,2.147,563,2.147,564,2.147,565,1.352,566,2.147,567,1.352,568,1.352,569,1.352,570,1.352,571,0.868,572,1.352,573,1.352,574,1.352,575,2.67,576,1.352,577,1.352,578,1.352,579,1.352,580,1.352,581,1.352,582,1.352]],["title/coverage.html",[583,2.64]],["body/coverage.html",[0,0.203,1,0.751,8,0.619,9,2.205,12,0.751,18,0.751,19,0.9,20,0.9,21,0.9,22,0.9,23,0.9,24,0.9,38,0.068,40,0.751,72,0.751,75,0.751,80,0.9,83,0.751,88,0.751,92,0.049,93,0.049,94,2.205,117,2.205,129,1.648,130,1.507,132,2.205,212,1.269,249,2.641,384,2.205,391,2.205,404,2.205,414,1.507,486,2.205,583,2.205,584,2.812,585,2.812,586,2.812,587,3.652,588,2.864,589,4.799,590,2.205,591,4.833,592,2.205,593,2.205,594,2.205,595,2.205,596,2.205,597,2.812,598,2.812,599,2.812,600,2.812,601,2.812,602,4.56,603,2.812,604,2.812,605,4.45,606,2.812,607,2.812,608,2.812,609,2.812,610,2.812,611,2.812,612,2.812,613,2.812,614,2.812,615,2.205,616,1.806,617,3.489,618,2.205,619,2.205,620,2.205,621,2.812,622,2.812,623,2.205,624,2.812,625,2.812]],["title/dependencies.html",[626,1.639,627,2.34]],["body/dependencies.html",[38,0.068,48,0.741,49,1.803,92,0.055,93,0.055,111,2.161,112,1.518,113,2.161,514,2.639,616,2.625,627,2.639,628,3.365,629,4.909,630,3.365,631,3.365,632,3.365,633,3.365,634,3.365,635,4.404,636,2.625,637,3.365,638,2.161,639,3.365,640,2.639,641,3.365,642,3.365,643,3.365,644,3.365,645,3.365,646,3.365,647,2.639,648,3.365,649,3.365,650,3.365,651,3.365,652,3.365,653,3.365,654,3.365,655,3.365]],["title/index.html",[29,0.559,656,2.09,657,2.09]],["body/index.html",[0,0.172,2,0.781,4,0.644,38,0.05,42,1.425,45,2.292,90,0.936,92,0.05,93,0.05,112,1.965,186,1.877,193,1.877,212,1.319,256,2.292,257,3.613,279,2.292,402,1.877,571,2.653,636,1.877,638,2.653,640,2.292,658,4.131,659,2.923,660,3.744,661,3.532,662,2.292,663,3.744,664,2.923,665,4.504,666,4.608,667,4.608,668,2.923,669,3.744,670,2.923,671,2.923,672,2.923,673,3.744,674,2.923,675,2.923,676,2.923,677,2.923,678,2.923,679,3.744,680,3.744,681,2.923,682,2.923,683,2.923,684,4.131,685,2.923,686,2.923,687,2.923,688,2.923,689,2.923,690,2.923,691,2.923,692,2.923,693,2.923,694,2.923,695,2.923,696,2.923,697,2.923,698,2.923,699,2.923,700,2.923,701,2.923,702,3.744,703,4.131,704,2.923,705,2.923,706,2.923,707,2.923,708,2.923,709,4.131,710,2.923,711,2.923,712,3.744,713,2.923,714,2.923,715,2.923,716,2.923,717,2.923,718,2.923,719,2.923,720,2.923,721,2.923,722,2.923,723,2.923,724,2.923,725,2.923,726,2.923,727,1.877,728,2.923]],["title/modules.html",[729,2.64]],["body/modules.html",[38,0.06,92,0.06,93,0.06,729,3.086]],["title/overview.html",[727,2.161]],["body/overview.html",[2,1.041,38,0.06,92,0.06,93,0.06,131,2.501,727,2.501,730,3.896,731,3.896]],["title/properties.html",[30,0.797,626,1.639]],["body/properties.html",[30,1.044,38,0.063,92,0.06,93,0.06,662,3.063,732,3.905]],["title/miscellaneous/variables.html",[733,1.639,734,2.34]],["body/miscellaneous/variables.html",[12,1.018,15,0.802,29,0.802,38,0.068,40,1.118,42,1.846,43,2.188,92,0.051,93,0.051,112,1.354,212,1.354,554,2.354,571,1.927,588,2.354,590,3.28,592,3.28,593,2.354,594,2.987,595,2.354,596,2.987,615,2.354,616,2.445,617,2.354,618,2.987,619,2.987,620,2.987,623,2.987,636,1.927,638,1.927,647,2.354,661,2.354,733,2.354,734,2.354,735,4.54,736,3.002,737,3.002,738,3.809,739,3.002,740,3.002,741,3.002,742,3.002,743,3.002,744,3.002,745,3.002,746,3.002,747,3.002,748,3.809,749,3.809,750,3.002,751,3.002,752,3.002,753,3.002,754,3.002,755,3.002,756,3.002,757,3.002,758,3.002,759,3.002,760,3.002,761,3.002,762,3.002]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":249,"title":{},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":732,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":612,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":230,"title":{},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["1.1.26",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["1.11.3",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":222,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["100",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":730,"title":{},"body":{"overview.html":{}}}],["18",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["19.0.0",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["19.0.3",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["19.0.4",{"_index":640,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["2",{"_index":731,"title":{},"body":{"overview.html":{}}}],["2.2.3",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["2/11",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["23/25",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["24/26",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["3.7.1",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["32/33",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["4.18.2",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":471,"title":{},"body":{"components/TestWSComponent.html":{}}}],["5.3.3",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["67267637aeb441ea7afa163a",{"_index":421,"title":{},"body":{"components/TestWSComponent.html":{}}}],["67267637aeb441ea7afa163b",{"_index":453,"title":{},"body":{"components/TestWSComponent.html":{}}}],["7.8.0",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["8/10",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":610,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["_id",{"_index":267,"title":{},"body":{"injectables/DataService.html":{}}}],["actual_component",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["add",{"_index":319,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["added",{"_index":216,"title":{},"body":{"injectables/DataService.html":{}}}],["additional",{"_index":719,"title":{},"body":{"index.html":{}}}],["adds",{"_index":213,"title":{},"body":{"injectables/DataService.html":{}}}],["allowed",{"_index":149,"title":{},"body":{"injectables/DataService.html":{}}}],["angular",{"_index":112,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":113,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":513,"title":{},"body":{"injectables/WebService.html":{}}}],["angular/compiler",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["angular/google",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":618,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["any[]).find(city",{"_index":283,"title":{},"body":{"injectables/DataService.html":{}}}],["any[]).slice(pagestart",{"_index":233,"title":{},"body":{"injectables/DataService.html":{}}}],["api",{"_index":517,"title":{},"body":{"injectables/WebService.html":{}}}],["apiurl",{"_index":487,"title":{},"body":{"injectables/WebService.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.component.css",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":594,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["append",{"_index":546,"title":{},"body":{"injectables/WebService.html":{}}}],["application",{"_index":673,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":191,"title":{},"body":{"injectables/DataService.html":{}}}],["apply",{"_index":254,"title":{},"body":{"injectables/DataService.html":{}}}],["armagh",{"_index":396,"title":{},"body":{"components/NavComponent.html":{}}}],["armaghbusinesses'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["armaghbusinessescomponent",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{}}}],["array",{"_index":196,"title":{},"body":{"injectables/DataService.html":{}}}],["array.isarray(parseddata",{"_index":246,"title":{},"body":{"injectables/DataService.html":{}}}],["artifacts",{"_index":695,"title":{},"body":{"index.html":{}}}],["asc",{"_index":435,"title":{},"body":{"components/TestWSComponent.html":{}}}],["assets/foodplaces.json",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{}}}],["associated",{"_index":189,"title":{},"body":{"injectables/DataService.html":{}}}],["asyncpipe",{"_index":96,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{}}}],["auth",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["auth0/auth0",{"_index":111,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"dependencies.html":{}}}],["authbutton.component",{"_index":388,"title":{},"body":{"components/HomeComponent.html":{},"components/NavComponent.html":{}}}],["authbutton.component.html",{"_index":98,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["authbuttoncomponent",{"_index":72,"title":{"components/AuthButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{}}}],["author_name",{"_index":291,"title":{},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["authservice",{"_index":103,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{}}}],["authuser.component",{"_index":389,"title":{},"body":{"components/HomeComponent.html":{},"components/NavComponent.html":{}}}],["authuser.component.html",{"_index":119,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["authusercomponent",{"_index":75,"title":{"components/AuthUserComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{}}}],["automatically",{"_index":674,"title":{},"body":{"index.html":{}}}],["available",{"_index":687,"title":{},"body":{"index.html":{}}}],["average",{"_index":160,"title":{},"body":{"injectables/DataService.html":{}}}],["average_rating",{"_index":316,"title":{},"body":{"injectables/DataService.html":{}}}],["backend",{"_index":516,"title":{},"body":{"injectables/WebService.html":{}}}],["bangor",{"_index":397,"title":{},"body":{"components/NavComponent.html":{}}}],["bangorbusinesses'},{'name",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["bangorbusinessescomponent",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{}}}],["base",{"_index":518,"title":{},"body":{"injectables/WebService.html":{}}}],["based",{"_index":204,"title":{},"body":{"injectables/DataService.html":{}}}],["before",{"_index":247,"title":{},"body":{"injectables/DataService.html":{}}}],["being",{"_index":304,"title":{},"body":{"injectables/DataService.html":{}}}],["belfast",{"_index":398,"title":{},"body":{"components/NavComponent.html":{}}}],["belfastbusinesses'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["belfastbusinessescomponent",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{}}}],["boolean",{"_index":165,"title":{},"body":{"injectables/DataService.html":{}}}],["bootstrap",{"_index":616,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":340,"title":{},"body":{"injectables/DataService.html":{}}}],["browser",{"_index":636,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":619,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":571,"title":{},"body":{"injectables/WebService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["buildthis",{"_index":692,"title":{},"body":{"index.html":{}}}],["business",{"_index":145,"title":{},"body":{"injectables/DataService.html":{}}}],["business's",{"_index":214,"title":{},"body":{"injectables/DataService.html":{}}}],["business'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["businesscomponent",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{}}}],["businessdata",{"_index":239,"title":{},"body":{"injectables/DataService.html":{}}}],["businesses",{"_index":184,"title":{},"body":{"injectables/DataService.html":{}}}],["businessfound",{"_index":302,"title":{},"body":{"injectables/DataService.html":{}}}],["businessid",{"_index":163,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["button",{"_index":95,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["button'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["c_arm",{"_index":194,"title":{},"body":{"injectables/DataService.html":{}}}],["calculat",{"_index":369,"title":{},"body":{"injectables/DataService.html":{}}}],["calculate",{"_index":255,"title":{},"body":{"injectables/DataService.html":{}}}],["calculates",{"_index":219,"title":{},"body":{"injectables/DataService.html":{}}}],["call",{"_index":549,"title":{},"body":{"injectables/WebService.html":{}}}],["case",{"_index":345,"title":{},"body":{"injectables/DataService.html":{}}}],["changed",{"_index":303,"title":{},"body":{"injectables/DataService.html":{}}}],["check",{"_index":240,"title":{},"body":{"injectables/DataService.html":{}}}],["checks",{"_index":315,"title":{},"body":{"injectables/DataService.html":{}}}],["choose",{"_index":716,"title":{},"body":{"index.html":{}}}],["cities",{"_index":274,"title":{},"body":{"injectables/DataService.html":{}}}],["cities/armagh/armaghbusinesses.component",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["cities/bangor/bangorbusinesses.component",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["cities/belfast/belfastbusinesses.component",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["cities/derrylondonderry/derrybusinesses.component",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["cities/lisburn/lisburnbusinesses.component",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["cities/newry/newrybusinesses.component",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["city",{"_index":187,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["city's",{"_index":208,"title":{},"body":{"injectables/DataService.html":{}}}],["city._id",{"_index":277,"title":{},"body":{"injectables/DataService.html":{}}}],["city.city_id",{"_index":250,"title":{},"body":{"injectables/DataService.html":{}}}],["city.city_name",{"_index":278,"title":{},"body":{"injectables/DataService.html":{}}}],["city.places",{"_index":307,"title":{},"body":{"injectables/DataService.html":{}}}],["city.places.find((p",{"_index":310,"title":{},"body":{"injectables/DataService.html":{}}}],["city.places?.find((p",{"_index":275,"title":{},"body":{"injectables/DataService.html":{}}}],["city_name",{"_index":269,"title":{},"body":{"injectables/DataService.html":{}}}],["citydata",{"_index":251,"title":{},"body":{"injectables/DataService.html":{}}}],["citydata._id",{"_index":268,"title":{},"body":{"injectables/DataService.html":{}}}],["citydata.city_name",{"_index":270,"title":{},"body":{"injectables/DataService.html":{}}}],["citydata.places.length",{"_index":261,"title":{},"body":{"injectables/DataService.html":{}}}],["citydata.places.slice(pagestart",{"_index":264,"title":{},"body":{"injectables/DataService.html":{}}}],["citydata?.places?.length",{"_index":285,"title":{},"body":{"injectables/DataService.html":{}}}],["cityid",{"_index":181,"title":{},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["class",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["clean",{"_index":477,"title":{},"body":{"components/TestWSComponent.html":{}}}],["cli",{"_index":661,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["code",{"_index":679,"title":{},"body":{"index.html":{}}}],["come",{"_index":714,"title":{},"body":{"index.html":{}}}],["command",{"_index":709,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":97,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{}}}],["compile",{"_index":693,"title":{},"body":{"index.html":{}}}],["complete",{"_index":686,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"index.html":{},"overview.html":{}}}],["config",{"_index":590,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["console",{"_index":258,"title":{},"body":{"injectables/DataService.html":{}}}],["console.error('business",{"_index":346,"title":{},"body":{"injectables/DataService.html":{}}}],["console.error('getplace",{"_index":460,"title":{},"body":{"components/TestWSComponent.html":{}}}],["console.error('getplacereviews",{"_index":469,"title":{},"body":{"components/TestWSComponent.html":{}}}],["console.error('getplaces",{"_index":450,"title":{},"body":{"components/TestWSComponent.html":{}}}],["console.error('postreview",{"_index":483,"title":{},"body":{"components/TestWSComponent.html":{}}}],["console.log('getplace",{"_index":458,"title":{},"body":{"components/TestWSComponent.html":{}}}],["console.log('getplacereviews",{"_index":467,"title":{},"body":{"components/TestWSComponent.html":{}}}],["console.log('getplaces",{"_index":442,"title":{},"body":{"components/TestWSComponent.html":{}}}],["console.log('getting",{"_index":262,"title":{},"body":{"injectables/DataService.html":{}}}],["console.log('making",{"_index":555,"title":{},"body":{"injectables/WebService.html":{}}}],["console.log('places",{"_index":263,"title":{},"body":{"injectables/DataService.html":{}}}],["console.log('postreview",{"_index":475,"title":{},"body":{"components/TestWSComponent.html":{}}}],["console.log('total",{"_index":260,"title":{},"body":{"injectables/DataService.html":{}}}],["console.log(`making",{"_index":548,"title":{},"body":{"injectables/WebService.html":{}}}],["console.log(jsondata",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":236,"title":{},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["constructor",{"_index":101,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["constructor(@inject(document",{"_index":114,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["constructor(auth",{"_index":120,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["constructor(dataservice",{"_index":413,"title":{},"body":{"components/TestWSComponent.html":{}}}],["constructor(document",{"_index":102,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["constructor(http",{"_index":489,"title":{},"body":{"injectables/WebService.html":{}}}],["constructor(private",{"_index":425,"title":{},"body":{"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["constructor(public",{"_index":123,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["containing",{"_index":197,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["content",{"_index":175,"title":{},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["continue",{"_index":308,"title":{},"body":{"injectables/DataService.html":{}}}],["convert",{"_index":244,"title":{},"body":{"injectables/DataService.html":{}}}],["correct",{"_index":227,"title":{},"body":{"injectables/DataService.html":{}}}],["count",{"_index":215,"title":{},"body":{"injectables/DataService.html":{}}}],["coverage",{"_index":583,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":288,"title":{},"body":{"injectables/DataService.html":{}}}],["createnoderequesthandler(app",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":124,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["currentcity",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["data",{"_index":146,"title":{},"body":{"injectables/DataService.html":{}}}],["data.service",{"_index":423,"title":{},"body":{"components/TestWSComponent.html":{}}}],["dataservice",{"_index":130,"title":{"injectables/DataService.html":{}},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{},"coverage.html":{}}}],["date",{"_index":296,"title":{},"body":{"injectables/DataService.html":{}}}],["date_posted",{"_index":295,"title":{},"body":{"injectables/DataService.html":{}}}],["debug",{"_index":551,"title":{},"body":{"injectables/WebService.html":{}}}],["debugging",{"_index":572,"title":{},"body":{"injectables/WebService.html":{}}}],["declared",{"_index":305,"title":{},"body":{"injectables/DataService.html":{}}}],["decorators",{"_index":108,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["default",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["delete",{"_index":379,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["deleted",{"_index":167,"title":{},"body":{"injectables/DataService.html":{}}}],["deleteplace",{"_index":488,"title":{},"body":{"injectables/WebService.html":{}}}],["deleteplace(cityid",{"_index":493,"title":{},"body":{"injectables/WebService.html":{}}}],["deletereview",{"_index":134,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["deletereview(businessid",{"_index":150,"title":{},"body":{"injectables/DataService.html":{}}}],["deletereview(cityid",{"_index":496,"title":{},"body":{"injectables/WebService.html":{}}}],["deletes",{"_index":153,"title":{},"body":{"injectables/DataService.html":{}}}],["deleting",{"_index":479,"title":{},"body":{"components/TestWSComponent.html":{}}}],["dependencies",{"_index":627,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["derry/londonderry",{"_index":399,"title":{},"body":{"components/NavComponent.html":{}}}],["derrybusinesses'},{'name",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["derrybusinessescomponent",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{}}}],["description",{"_index":162,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["detailed",{"_index":724,"title":{},"body":{"index.html":{}}}],["details",{"_index":125,"title":{},"body":{"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["determines",{"_index":201,"title":{},"body":{"injectables/DataService.html":{}}}],["dev",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":663,"title":{},"body":{"index.html":{}}}],["direction",{"_index":545,"title":{},"body":{"injectables/WebService.html":{}}}],["directive",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["directives",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"index.html":{}}}],["directory",{"_index":697,"title":{},"body":{"index.html":{}}}],["dirname(fileurltopath(import.meta.url",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist",{"_index":696,"title":{},"body":{"index.html":{}}}],["diveded",{"_index":287,"title":{},"body":{"injectables/DataService.html":{}}}],["divides",{"_index":205,"title":{},"body":{"injectables/DataService.html":{}}}],["document",{"_index":100,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["documentation",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["doesnt",{"_index":226,"title":{},"body":{"injectables/DataService.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["during",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":637,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":711,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":713,"title":{},"body":{"index.html":{}}}],["each",{"_index":195,"title":{},"body":{"injectables/DataService.html":{}}}],["edit",{"_index":362,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["edit_date",{"_index":361,"title":{},"body":{"injectables/DataService.html":{}}}],["edited",{"_index":360,"title":{},"body":{"injectables/DataService.html":{}}}],["editreview",{"_index":135,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["editreview(businessid",{"_index":170,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["edits",{"_index":173,"title":{},"body":{"injectables/DataService.html":{}}}],["element",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["email",{"_index":127,"title":{},"body":{"components/AuthUserComponent.html":{},"injectables/DataService.html":{}}}],["empty",{"_index":252,"title":{},"body":{"injectables/DataService.html":{}}}],["end",{"_index":257,"title":{},"body":{"injectables/DataService.html":{},"index.html":{}}}],["endpoint",{"_index":557,"title":{},"body":{"injectables/WebService.html":{}}}],["ensure",{"_index":321,"title":{},"body":{"injectables/DataService.html":{}}}],["error",{"_index":347,"title":{},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{}}}],["error.message",{"_index":451,"title":{},"body":{"components/TestWSComponent.html":{}}}],["error.status",{"_index":462,"title":{},"body":{"components/TestWSComponent.html":{}}}],["eventcoalescing",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":666,"title":{},"body":{"index.html":{}}}],["execute",{"_index":704,"title":{},"body":{"index.html":{}}}],["exist",{"_index":351,"title":{},"body":{"injectables/DataService.html":{}}}],["existing",{"_index":154,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["exists",{"_index":322,"title":{},"body":{"injectables/DataService.html":{}}}],["exit",{"_index":341,"title":{},"body":{"injectables/DataService.html":{}}}],["export",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["express",{"_index":647,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["fail",{"_index":448,"title":{},"body":{"components/TestWSComponent.html":{}}}],["fails",{"_index":348,"title":{},"body":{"injectables/DataService.html":{}}}],["false",{"_index":169,"title":{},"body":{"injectables/DataService.html":{}}}],["fetch",{"_index":506,"title":{},"body":{"injectables/WebService.html":{}}}],["fetches",{"_index":183,"title":{},"body":{"injectables/DataService.html":{}}}],["field",{"_index":542,"title":{},"body":{"injectables/WebService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{},"coverage.html":{}}}],["files",{"_index":678,"title":{},"body":{"index.html":{}}}],["filter",{"_index":530,"title":{},"body":{"injectables/WebService.html":{}}}],["filtering",{"_index":501,"title":{},"body":{"injectables/WebService.html":{}}}],["filters",{"_index":430,"title":{},"body":{"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["filters).subscribe",{"_index":439,"title":{},"body":{"components/TestWSComponent.html":{}}}],["filters.min_rating",{"_index":531,"title":{},"body":{"injectables/WebService.html":{}}}],["filters.min_rating.tostring",{"_index":534,"title":{},"body":{"injectables/WebService.html":{}}}],["filters.selectedmeal",{"_index":536,"title":{},"body":{"injectables/WebService.html":{}}}],["filters.sortby",{"_index":540,"title":{},"body":{"injectables/WebService.html":{}}}],["filters.sortdirection",{"_index":543,"title":{},"body":{"injectables/WebService.html":{}}}],["filters.type",{"_index":528,"title":{},"body":{"injectables/WebService.html":{}}}],["find",{"_index":311,"title":{},"body":{"injectables/DataService.html":{}}}],["finds",{"_index":156,"title":{},"body":{"injectables/DataService.html":{}}}],["first",{"_index":271,"title":{},"body":{"injectables/DataService.html":{}}}],["following",{"_index":708,"title":{},"body":{"index.html":{}}}],["food",{"_index":390,"title":{},"body":{"components/HomeComponent.html":{},"components/NavComponent.html":{}}}],["foodplaces",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["format",{"_index":281,"title":{},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{}}}],["formdata",{"_index":575,"title":{},"body":{"injectables/WebService.html":{}}}],["formdata.append(\"comment",{"_index":578,"title":{},"body":{"injectables/WebService.html":{}}}],["formdata.append(\"stars",{"_index":580,"title":{},"body":{"injectables/WebService.html":{}}}],["formdata.append(\"username",{"_index":576,"title":{},"body":{"injectables/WebService.html":{}}}],["foun",{"_index":367,"title":{},"body":{"injectables/DataService.html":{}}}],["found",{"_index":253,"title":{},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{}}}],["framework",{"_index":715,"title":{},"body":{"index.html":{}}}],["generate",{"_index":684,"title":{},"body":{"index.html":{}}}],["generated",{"_index":659,"title":{},"body":{"index.html":{}}}],["getbusiness",{"_index":136,"title":{},"body":{"injectables/DataService.html":{}}}],["getbusiness(businessid",{"_index":177,"title":{},"body":{"injectables/DataService.html":{}}}],["getbusinesses",{"_index":137,"title":{},"body":{"injectables/DataService.html":{}}}],["getbusinesses(page",{"_index":179,"title":{},"body":{"injectables/DataService.html":{}}}],["getlastpagenumber",{"_index":138,"title":{},"body":{"injectables/DataService.html":{}}}],["getlastpagenumber(cityid",{"_index":198,"title":{},"body":{"injectables/DataService.html":{}}}],["getplace",{"_index":455,"title":{},"body":{"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["getplace(cityid",{"_index":499,"title":{},"body":{"injectables/WebService.html":{}}}],["getplacereviews",{"_index":464,"title":{},"body":{"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["getplacereviews(cityid",{"_index":502,"title":{},"body":{"injectables/WebService.html":{}}}],["getplaces",{"_index":437,"title":{},"body":{"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["getplaces(cityid",{"_index":504,"title":{},"body":{"injectables/WebService.html":{}}}],["getreviews(cityid",{"_index":573,"title":{},"body":{"injectables/WebService.html":{}}}],["getting",{"_index":656,"title":{"index.html":{}},"body":{}}],["go",{"_index":306,"title":{},"body":{"injectables/DataService.html":{}}}],["handle",{"_index":344,"title":{},"body":{"injectables/DataService.html":{}}}],["handler",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["help",{"_index":550,"title":{},"body":{"injectables/WebService.html":{}}}],["helpbuilding",{"_index":691,"title":{},"body":{"index.html":{}}}],["home",{"_index":385,"title":{},"body":{"components/HomeComponent.html":{},"components/NavComponent.html":{}}}],["home'},{'name",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["home.component.css",{"_index":387,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":386,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":83,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{}}}],["html",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["http",{"_index":492,"title":{},"body":{"injectables/WebService.html":{}}}],["http://localhost:2000/api",{"_index":511,"title":{},"body":{"injectables/WebService.html":{}}}],["http://localhost:4200",{"_index":672,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":490,"title":{},"body":{"injectables/WebService.html":{}}}],["icons",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":164,"title":{},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["identifier",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":157,"title":{},"body":{"injectables/DataService.html":{}}}],["import",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{}}}],["includes",{"_index":681,"title":{},"body":{"index.html":{}}}],["including",{"_index":723,"title":{},"body":{"index.html":{}}}],["increment",{"_index":329,"title":{},"body":{"injectables/DataService.html":{}}}],["index",{"_index":29,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["information",{"_index":722,"title":{},"body":{"index.html":{}}}],["inject",{"_index":110,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["inject(document",{"_index":109,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["injectable",{"_index":129,"title":{"injectables/DataService.html":{},"injectables/WebService.html":{}},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{},"coverage.html":{}}}],["injectables",{"_index":131,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{},"overview.html":{}}}],["invalid",{"_index":449,"title":{},"body":{"components/TestWSComponent.html":{}}}],["items",{"_index":515,"title":{},"body":{"injectables/WebService.html":{}}}],["jquery",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":148,"title":{},"body":{"injectables/DataService.html":{}}}],["json.parse(saveddata",{"_index":243,"title":{},"body":{"injectables/DataService.html":{}}}],["json.stringify(jsondata",{"_index":338,"title":{},"body":{"injectables/DataService.html":{}}}],["jsondata",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{}}}],["karma",{"_index":705,"title":{},"body":{"index.html":{}}}],["keep",{"_index":358,"title":{},"body":{"injectables/DataService.html":{}}}],["last",{"_index":200,"title":{},"body":{"injectables/DataService.html":{}}}],["legend",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["lisburn",{"_index":400,"title":{},"body":{"components/NavComponent.html":{}}}],["lisburnbusinesses'},{'name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["lisburnbusinessescomponent",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{}}}],["list",{"_index":193,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{},"index.html":{}}}],["load",{"_index":234,"title":{},"body":{"injectables/DataService.html":{}}}],["loads",{"_index":143,"title":{},"body":{"injectables/DataService.html":{}}}],["local",{"_index":664,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":235,"title":{},"body":{"injectables/DataService.html":{}}}],["localstorage.getitem('businessdata",{"_index":238,"title":{},"body":{"injectables/DataService.html":{}}}],["localstorage.setitem('businessdata",{"_index":337,"title":{},"body":{"injectables/DataService.html":{}}}],["locate",{"_index":349,"title":{},"body":{"injectables/DataService.html":{}}}],["log",{"_index":115,"title":{},"body":{"components/AuthButtonComponent.html":{},"injectables/DataService.html":{}}}],["loop",{"_index":342,"title":{},"body":{"injectables/DataService.html":{}}}],["maps",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["mark",{"_index":336,"title":{},"body":{"injectables/DataService.html":{}}}],["matching",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalplaces",{"_index":286,"title":{},"body":{"injectables/DataService.html":{}}}],["meal",{"_index":507,"title":{},"body":{"injectables/WebService.html":{}}}],["merge",{"_index":357,"title":{},"body":{"injectables/DataService.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merges",{"_index":147,"title":{},"body":{"injectables/DataService.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["methods",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["min_rating",{"_index":432,"title":{},"body":{"components/TestWSComponent.html":{}}}],["minimum",{"_index":535,"title":{},"body":{"injectables/WebService.html":{}}}],["miscellaneous",{"_index":733,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":677,"title":{},"body":{"index.html":{}}}],["modules",{"_index":729,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":721,"title":{},"body":{"index.html":{}}}],["name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["namefor",{"_index":685,"title":{},"body":{"index.html":{}}}],["nav.component",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["nav.component.html",{"_index":394,"title":{},"body":{"components/NavComponent.html":{}}}],["navcomponent",{"_index":18,"title":{"components/NavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":671,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":392,"title":{},"body":{"components/NavComponent.html":{}}}],["navigation'},{'name",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["needed",{"_index":313,"title":{},"body":{"injectables/DataService.html":{}}}],["needs",{"_index":718,"title":{},"body":{"index.html":{}}}],["new",{"_index":212,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newcount",{"_index":328,"title":{},"body":{"injectables/DataService.html":{}}}],["newcount).tofixed(1",{"_index":335,"title":{},"body":{"injectables/DataService.html":{}}}],["newreview",{"_index":290,"title":{},"body":{"injectables/DataService.html":{}}}],["newreview.rating",{"_index":333,"title":{},"body":{"injectables/DataService.html":{}}}],["newry",{"_index":401,"title":{},"body":{"components/NavComponent.html":{}}}],["newrybusinesses'},{'name",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["newrybusinessescomponent",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{}}}],["newtotal",{"_index":332,"title":{},"body":{"injectables/DataService.html":{}}}],["next",{"_index":440,"title":{},"body":{"components/TestWSComponent.html":{}}}],["ng",{"_index":667,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/TestWSComponent.html":{}}}],["ni",{"_index":395,"title":{},"body":{"components/NavComponent.html":{}}}],["number",{"_index":180,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["number((newtotal",{"_index":334,"title":{},"body":{"injectables/DataService.html":{}}}],["number((totalrating",{"_index":374,"title":{},"body":{"injectables/DataService.html":{}}}],["number(r.rating",{"_index":373,"title":{},"body":{"injectables/DataService.html":{}}}],["number(review.rating",{"_index":294,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["number(reviewdata.rating",{"_index":569,"title":{},"body":{"injectables/WebService.html":{}}}],["observable",{"_index":495,"title":{},"body":{"injectables/WebService.html":{}}}],["oldcount",{"_index":325,"title":{},"body":{"injectables/DataService.html":{}}}],["oldtotal",{"_index":330,"title":{},"body":{"injectables/DataService.html":{}}}],["once",{"_index":343,"title":{},"body":{"injectables/DataService.html":{}}}],["one",{"_index":279,"title":{},"body":{"injectables/DataService.html":{},"index.html":{}}}],["open",{"_index":670,"title":{},"body":{"index.html":{}}}],["optimizes",{"_index":699,"title":{},"body":{"index.html":{}}}],["optional",{"_index":106,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["original",{"_index":359,"title":{},"body":{"injectables/DataService.html":{}}}],["otherwise",{"_index":168,"title":{},"body":{"injectables/DataService.html":{}}}],["out",{"_index":116,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["overview",{"_index":727,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p._id?.$oid",{"_index":276,"title":{},"body":{"injectables/DataService.html":{}}}],["package",{"_index":626,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":186,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{},"index.html":{}}}],["page.tostring",{"_index":525,"title":{},"body":{"injectables/WebService.html":{}}}],["pageend",{"_index":232,"title":{},"body":{"injectables/DataService.html":{}}}],["pageend).length",{"_index":265,"title":{},"body":{"injectables/DataService.html":{}}}],["pages",{"_index":203,"title":{},"body":{"injectables/DataService.html":{}}}],["pagesize",{"_index":133,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["pagestart",{"_index":229,"title":{},"body":{"injectables/DataService.html":{}}}],["paginated",{"_index":266,"title":{},"body":{"injectables/DataService.html":{}}}],["pagination",{"_index":192,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["param",{"_index":282,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["parameters",{"_index":105,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["params",{"_index":522,"title":{},"body":{"injectables/WebService.html":{}}}],["params.append('min_rating",{"_index":533,"title":{},"body":{"injectables/WebService.html":{}}}],["params.append('sort_by",{"_index":541,"title":{},"body":{"injectables/WebService.html":{}}}],["params.append('sort_order",{"_index":544,"title":{},"body":{"injectables/WebService.html":{}}}],["params.append('type",{"_index":529,"title":{},"body":{"injectables/WebService.html":{}}}],["params.append(filters.selectedmeal",{"_index":537,"title":{},"body":{"injectables/WebService.html":{}}}],["parseddata",{"_index":242,"title":{},"body":{"injectables/DataService.html":{}}}],["pass",{"_index":445,"title":{},"body":{"components/TestWSComponent.html":{}}}],["path",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["per",{"_index":223,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["perform",{"_index":553,"title":{},"body":{"injectables/WebService.html":{}}}],["performance",{"_index":700,"title":{},"body":{"index.html":{}}}],["pipes",{"_index":690,"title":{},"body":{"index.html":{}}}],["place",{"_index":221,"title":{},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["place.ratings",{"_index":314,"title":{},"body":{"injectables/DataService.html":{}}}],["place.ratings.average_rating",{"_index":331,"title":{},"body":{"injectables/DataService.html":{}}}],["place.ratings.recent_reviews",{"_index":320,"title":{},"body":{"injectables/DataService.html":{}}}],["place.ratings.recent_reviews.findindex",{"_index":353,"title":{},"body":{"injectables/DataService.html":{}}}],["place.ratings.recent_reviews.length",{"_index":380,"title":{},"body":{"injectables/DataService.html":{}}}],["place.ratings.recent_reviews.push(newreview",{"_index":323,"title":{},"body":{"injectables/DataService.html":{}}}],["place.ratings.recent_reviews.splice(reviewindex",{"_index":378,"title":{},"body":{"injectables/DataService.html":{}}}],["place.ratings.recent_reviews[reviewindex",{"_index":356,"title":{},"body":{"injectables/DataService.html":{}}}],["place.ratings.recent_reviews[reviewindex].useremail",{"_index":364,"title":{},"body":{"injectables/DataService.html":{}}}],["place.ratings.review_count",{"_index":326,"title":{},"body":{"injectables/DataService.html":{}}}],["place.ratings?.recent_reviews?.length",{"_index":368,"title":{},"body":{"injectables/DataService.html":{}}}],["place?.ratings?.recent_reviews",{"_index":350,"title":{},"body":{"injectables/DataService.html":{}}}],["placeid",{"_index":463,"title":{},"body":{"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["placeid).subscribe",{"_index":466,"title":{},"body":{"components/TestWSComponent.html":{}}}],["places",{"_index":206,"title":{},"body":{"injectables/DataService.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["pn",{"_index":524,"title":{},"body":{"injectables/WebService.html":{}}}],["post",{"_index":563,"title":{},"body":{"injectables/WebService.html":{}}}],["postreview",{"_index":139,"title":{},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["postreview(businessid",{"_index":209,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["postreview(cityid",{"_index":574,"title":{},"body":{"injectables/WebService.html":{}}}],["powerful",{"_index":682,"title":{},"body":{"index.html":{}}}],["preference",{"_index":538,"title":{},"body":{"injectables/WebService.html":{}}}],["preferences",{"_index":508,"title":{},"body":{"injectables/WebService.html":{}}}],["previous",{"_index":327,"title":{},"body":{"injectables/DataService.html":{}}}],["private",{"_index":140,"title":{},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["proccessing",{"_index":248,"title":{},"body":{"injectables/DataService.html":{}}}],["production",{"_index":698,"title":{},"body":{"index.html":{}}}],["profile",{"_index":118,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["profile'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["project",{"_index":658,"title":{},"body":{"index.html":{}}}],["properties",{"_index":30,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{},"properties.html":{}}}],["provideclienthydration(witheventreplay",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":289,"title":{},"body":{"injectables/DataService.html":{}}}],["providedin",{"_index":224,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["providehttpclient",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverroutesconfig(serverroutes",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ps",{"_index":526,"title":{},"body":{"injectables/WebService.html":{}}}],["public",{"_index":99,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{}}}],["query",{"_index":521,"title":{},"body":{"injectables/WebService.html":{}}}],["r",{"_index":354,"title":{},"body":{"injectables/DataService.html":{}}}],["r.review_id",{"_index":355,"title":{},"body":{"injectables/DataService.html":{}}}],["rating",{"_index":161,"title":{},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["ratings",{"_index":312,"title":{},"body":{"injectables/DataService.html":{}}}],["recalculate",{"_index":366,"title":{},"body":{"injectables/DataService.html":{}}}],["recalculates",{"_index":159,"title":{},"body":{"injectables/DataService.html":{}}}],["recent_reviews",{"_index":318,"title":{},"body":{"injectables/DataService.html":{}}}],["reference",{"_index":728,"title":{},"body":{"index.html":{}}}],["references",{"_index":725,"title":{},"body":{"index.html":{}}}],["reload",{"_index":675,"title":{},"body":{"index.html":{}}}],["remain",{"_index":383,"title":{},"body":{"injectables/DataService.html":{}}}],["remaining",{"_index":381,"title":{},"body":{"injectables/DataService.html":{}}}],["remove",{"_index":377,"title":{},"body":{"injectables/DataService.html":{}}}],["removes",{"_index":158,"title":{},"body":{"injectables/DataService.html":{}}}],["rendermode",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["report",{"_index":485,"title":{},"body":{"components/TestWSComponent.html":{}}}],["reqhandler",{"_index":620,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":554,"title":{},"body":{"injectables/WebService.html":{},"miscellaneous/variables.html":{}}}],["resolve(serverdistfolder",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resources",{"_index":720,"title":{},"body":{"index.html":{}}}],["response",{"_index":441,"title":{},"body":{"components/TestWSComponent.html":{}}}],["response._id",{"_index":480,"title":{},"body":{"components/TestWSComponent.html":{}}}],["response._id).subscribe",{"_index":482,"title":{},"body":{"components/TestWSComponent.html":{}}}],["response.places",{"_index":443,"title":{},"body":{"components/TestWSComponent.html":{}}}],["response.places.length",{"_index":446,"title":{},"body":{"components/TestWSComponent.html":{}}}],["results",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieved",{"_index":241,"title":{},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{}}}],["retrieves",{"_index":188,"title":{},"body":{"injectables/DataService.html":{}}}],["return",{"_index":228,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["returns",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["review",{"_index":155,"title":{},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["review.author_name",{"_index":292,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["review.comment",{"_index":579,"title":{},"body":{"injectables/WebService.html":{}}}],["review.content",{"_index":293,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["review.stars",{"_index":581,"title":{},"body":{"injectables/WebService.html":{}}}],["review.useremail",{"_index":300,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["review.username",{"_index":577,"title":{},"body":{"injectables/WebService.html":{}}}],["review_${date.now",{"_index":298,"title":{},"body":{"injectables/DataService.html":{}}}],["review_count",{"_index":317,"title":{},"body":{"injectables/DataService.html":{}}}],["review_id",{"_index":297,"title":{},"body":{"injectables/DataService.html":{}}}],["reviewdata",{"_index":171,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["reviewdata.author_name",{"_index":567,"title":{},"body":{"injectables/WebService.html":{}}}],["reviewdata.content",{"_index":568,"title":{},"body":{"injectables/WebService.html":{}}}],["reviewdata.useremail",{"_index":363,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["reviewdeleted",{"_index":376,"title":{},"body":{"injectables/DataService.html":{}}}],["reviewid",{"_index":151,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["reviewindex",{"_index":352,"title":{},"body":{"injectables/DataService.html":{}}}],["reviews",{"_index":220,"title":{},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["reviews.length).tofixed(1",{"_index":375,"title":{},"body":{"injectables/DataService.html":{}}}],["reviews.reduce((sum",{"_index":371,"title":{},"body":{"injectables/DataService.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["root'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["routermodule",{"_index":393,"title":{},"body":{"components/NavComponent.html":{}}}],["routeroutlet",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{}}}],["run",{"_index":665,"title":{},"body":{"index.html":{}}}],["runner",{"_index":706,"title":{},"body":{"index.html":{}}}],["running",{"_index":669,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":514,"title":{},"body":{"injectables/WebService.html":{},"dependencies.html":{}}}],["same",{"_index":280,"title":{},"body":{"injectables/DataService.html":{}}}],["save",{"_index":339,"title":{},"body":{"injectables/DataService.html":{}}}],["saved",{"_index":144,"title":{},"body":{"injectables/DataService.html":{}}}],["saveddata",{"_index":237,"title":{},"body":{"injectables/DataService.html":{}}}],["scaffolding",{"_index":680,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":688,"title":{},"body":{"index.html":{}}}],["search",{"_index":272,"title":{},"body":{"injectables/DataService.html":{}}}],["selectedmeal",{"_index":431,"title":{},"body":{"components/TestWSComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["serveonce",{"_index":668,"title":{},"body":{"index.html":{}}}],["server",{"_index":638,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":592,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverdistfolder",{"_index":623,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":596,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":382,"title":{},"body":{"injectables/DataService.html":{}}}],["size",{"_index":207,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["skip",{"_index":309,"title":{},"body":{"injectables/DataService.html":{}}}],["sort",{"_index":539,"title":{},"body":{"injectables/WebService.html":{}}}],["sortby",{"_index":433,"title":{},"body":{"components/TestWSComponent.html":{}}}],["sortdirection",{"_index":434,"title":{},"body":{"components/TestWSComponent.html":{}}}],["sorting",{"_index":509,"title":{},"body":{"injectables/WebService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{},"index.html":{}}}],["specific",{"_index":185,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["specified",{"_index":190,"title":{},"body":{"injectables/DataService.html":{}}}],["speed",{"_index":701,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:24",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":588,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":593,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":595,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/authbutton.component.ts",{"_index":94,"title":{},"body":{"components/AuthButtonComponent.html":{},"coverage.html":{}}}],["src/app/authbutton.component.ts:14",{"_index":104,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["src/app/authbutton.component.ts:15",{"_index":107,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["src/app/authuser.component.ts",{"_index":117,"title":{},"body":{"components/AuthUserComponent.html":{},"coverage.html":{}}}],["src/app/authuser.component.ts:13",{"_index":121,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["src/app/authuser.component.ts:14",{"_index":122,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["src/app/business.component.ts",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["src/app/cities/armagh/armaghbusinesses.component.ts",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["src/app/cities/bangor/bangorbusinesses.component.ts",{"_index":604,"title":{},"body":{"coverage.html":{}}}],["src/app/cities/belfast/belfastbusinesses.component.ts",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["src/app/cities/derrylondonderry/derrybusinesses.component.ts",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["src/app/cities/lisburn/lisburnbusinesses.component.ts",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["src/app/cities/newry/newrybusinesses.component.ts",{"_index":609,"title":{},"body":{"coverage.html":{}}}],["src/app/data.service.ts",{"_index":132,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/app/data.service.ts:109",{"_index":199,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/data.service.ts:126",{"_index":210,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/data.service.ts:19",{"_index":142,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/data.service.ts:193",{"_index":172,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/data.service.ts:228",{"_index":218,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/data.service.ts:244",{"_index":152,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/data.service.ts:61",{"_index":182,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/data.service.ts:86",{"_index":178,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/home.component.ts",{"_index":384,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/nav.component.ts",{"_index":391,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{}}}],["src/app/testws.component.ts",{"_index":404,"title":{},"body":{"components/TestWSComponent.html":{},"coverage.html":{}}}],["src/app/testws.component.ts:12",{"_index":422,"title":{},"body":{"components/TestWSComponent.html":{}}}],["src/app/testws.component.ts:13",{"_index":415,"title":{},"body":{"components/TestWSComponent.html":{}}}],["src/app/testws.component.ts:17",{"_index":416,"title":{},"body":{"components/TestWSComponent.html":{}}}],["src/app/testws.component.ts:24",{"_index":417,"title":{},"body":{"components/TestWSComponent.html":{}}}],["src/app/testws.component.ts:51",{"_index":419,"title":{},"body":{"components/TestWSComponent.html":{}}}],["src/app/testws.component.ts:71",{"_index":418,"title":{},"body":{"components/TestWSComponent.html":{}}}],["src/app/testws.component.ts:88",{"_index":420,"title":{},"body":{"components/TestWSComponent.html":{}}}],["src/app/web.service.ts",{"_index":486,"title":{},"body":{"injectables/WebService.html":{},"coverage.html":{}}}],["src/app/web.service.ts:112",{"_index":498,"title":{},"body":{"injectables/WebService.html":{}}}],["src/app/web.service.ts:16",{"_index":512,"title":{},"body":{"injectables/WebService.html":{}}}],["src/app/web.service.ts:19",{"_index":491,"title":{},"body":{"injectables/WebService.html":{}}}],["src/app/web.service.ts:30",{"_index":505,"title":{},"body":{"injectables/WebService.html":{}}}],["src/app/web.service.ts:74",{"_index":500,"title":{},"body":{"injectables/WebService.html":{}}}],["src/app/web.service.ts:79",{"_index":494,"title":{},"body":{"injectables/WebService.html":{}}}],["src/app/web.service.ts:84",{"_index":503,"title":{},"body":{"injectables/WebService.html":{}}}],["src/app/web.service.ts:90",{"_index":497,"title":{},"body":{"injectables/WebService.html":{}}}],["src/app/web.service.ts:97",{"_index":510,"title":{},"body":{"injectables/WebService.html":{}}}],["src/main.server.ts",{"_index":615,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":617,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{}}}],["start",{"_index":256,"title":{},"body":{"injectables/DataService.html":{},"index.html":{}}}],["started",{"_index":657,"title":{"index.html":{}},"body":{}}],["statements",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["statistics",{"_index":324,"title":{},"body":{"injectables/DataService.html":{}}}],["store",{"_index":694,"title":{},"body":{"index.html":{}}}],["string",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["styles",{"_index":403,"title":{},"body":{"components/TestWSComponent.html":{}}}],["styleurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["styleurls",{"_index":405,"title":{},"body":{"components/TestWSComponent.html":{}}}],["submits",{"_index":211,"title":{},"body":{"injectables/DataService.html":{}}}],["successfully",{"_index":166,"title":{},"body":{"injectables/DataService.html":{}}}],["such",{"_index":689,"title":{},"body":{"index.html":{}}}],["suits",{"_index":717,"title":{},"body":{"index.html":{}}}],["sum",{"_index":372,"title":{},"body":{"injectables/DataService.html":{}}}],["table",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["templateurl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["test",{"_index":402,"title":{},"body":{"components/NavComponent.html":{},"components/TestWSComponent.html":{},"index.html":{}}}],["test@example.com",{"_index":472,"title":{},"body":{"components/TestWSComponent.html":{}}}],["testgetplaces",{"_index":409,"title":{},"body":{"components/TestWSComponent.html":{}}}],["testgetreviews",{"_index":410,"title":{},"body":{"components/TestWSComponent.html":{}}}],["testgetsingleplace",{"_index":411,"title":{},"body":{"components/TestWSComponent.html":{}}}],["testing",{"_index":712,"title":{},"body":{"index.html":{}}}],["testplaceid",{"_index":452,"title":{},"body":{"components/TestWSComponent.html":{}}}],["testplaceid).subscribe",{"_index":457,"title":{},"body":{"components/TestWSComponent.html":{}}}],["testpostreview",{"_index":412,"title":{},"body":{"components/TestWSComponent.html":{}}}],["testresults",{"_index":408,"title":{},"body":{"components/TestWSComponent.html":{}}}],["testreview",{"_index":470,"title":{},"body":{"components/TestWSComponent.html":{}}}],["testrunning",{"_index":710,"title":{},"body":{"index.html":{}}}],["tests",{"_index":703,"title":{},"body":{"index.html":{}}}],["testws",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["testws.component.css",{"_index":406,"title":{},"body":{"components/TestWSComponent.html":{}}}],["testws.component.html",{"_index":407,"title":{},"body":{"components/TestWSComponent.html":{}}}],["testwscomponent",{"_index":88,"title":{"components/TestWSComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{},"coverage.html":{}}}],["this.apiurl}/api/cities/${cityid}/places/${placeid}/reviews",{"_index":582,"title":{},"body":{"injectables/WebService.html":{}}}],["this.apiurl}/cities/${cityid}/places",{"_index":520,"title":{},"body":{"injectables/WebService.html":{}}}],["this.apiurl}/cities/${cityid}/places/${businessid}/reviews",{"_index":565,"title":{},"body":{"injectables/WebService.html":{}}}],["this.apiurl}/cities/${cityid}/places/${businessid}/reviews/${reviewid",{"_index":562,"title":{},"body":{"injectables/WebService.html":{}}}],["this.apiurl}/cities/${cityid}/places/${placeid",{"_index":556,"title":{},"body":{"injectables/WebService.html":{}}}],["this.cityid).subscribe",{"_index":474,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.http.delete",{"_index":561,"title":{},"body":{"injectables/WebService.html":{}}}],["this.http.delete(`${this.apiurl}/cities/${cityid}/places/${placeid",{"_index":559,"title":{},"body":{"injectables/WebService.html":{}}}],["this.http.get(`${this.apiurl}/cities/${cityid}/places/${placeid",{"_index":558,"title":{},"body":{"injectables/WebService.html":{}}}],["this.http.get(`${this.apiurl}/cities/${cityid}/places/${placeid}/reviews",{"_index":560,"title":{},"body":{"injectables/WebService.html":{}}}],["this.http.get(url",{"_index":552,"title":{},"body":{"injectables/WebService.html":{}}}],["this.http.post",{"_index":564,"title":{},"body":{"injectables/WebService.html":{}}}],["this.http.put",{"_index":570,"title":{},"body":{"injectables/WebService.html":{}}}],["this.pagesize",{"_index":231,"title":{},"body":{"injectables/DataService.html":{}}}],["this.pagesize.tostring",{"_index":527,"title":{},"body":{"injectables/WebService.html":{}}}],["this.testgetplaces",{"_index":426,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.testgetreviews",{"_index":428,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.testgetsingleplace",{"_index":427,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.testpostreview",{"_index":429,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.testresults.push('getplace",{"_index":459,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.testresults.push('getplaces",{"_index":447,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.testresults.push('postreview",{"_index":476,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.testresults.push('testing",{"_index":436,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.testresults.push(`getplace",{"_index":461,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.testresults.push(`getplacereviews",{"_index":468,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.testresults.push(`getplaces",{"_index":444,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.testresults.push(`postreview",{"_index":484,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.testresults.push(`testing",{"_index":454,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.updateaveragerating(place",{"_index":365,"title":{},"body":{"injectables/DataService.html":{}}}],["this.webservice.deletereview(this.cityid",{"_index":481,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.webservice.getplace(this.cityid",{"_index":456,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.webservice.getplacereviews(this.cityid",{"_index":465,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.webservice.getplaces(this.cityid",{"_index":438,"title":{},"body":{"components/TestWSComponent.html":{}}}],["this.webservice.postreview(placeid",{"_index":473,"title":{},"body":{"components/TestWSComponent.html":{}}}],["through",{"_index":273,"title":{},"body":{"injectables/DataService.html":{}}}],["title",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["tools",{"_index":683,"title":{},"body":{"index.html":{}}}],["total",{"_index":202,"title":{},"body":{"injectables/DataService.html":{}}}],["totalplaces",{"_index":284,"title":{},"body":{"injectables/DataService.html":{}}}],["totalrating",{"_index":370,"title":{},"body":{"injectables/DataService.html":{}}}],["track",{"_index":301,"title":{},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"injectables/WebService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":532,"title":{},"body":{"injectables/WebService.html":{}}}],["unit",{"_index":702,"title":{},"body":{"index.html":{}}}],["up",{"_index":478,"title":{},"body":{"components/TestWSComponent.html":{}}}],["update",{"_index":245,"title":{},"body":{"injectables/DataService.html":{}}}],["updateaveragerating",{"_index":141,"title":{},"body":{"injectables/DataService.html":{}}}],["updateaveragerating(place",{"_index":217,"title":{},"body":{"injectables/DataService.html":{}}}],["updated",{"_index":176,"title":{},"body":{"injectables/DataService.html":{}}}],["updatedata",{"_index":566,"title":{},"body":{"injectables/WebService.html":{}}}],["updates",{"_index":174,"title":{},"body":{"injectables/DataService.html":{}}}],["url",{"_index":519,"title":{},"body":{"injectables/WebService.html":{}}}],["urlsearchparams",{"_index":523,"title":{},"body":{"injectables/WebService.html":{}}}],["url}?${params.tostring",{"_index":547,"title":{},"body":{"injectables/WebService.html":{}}}],["use",{"_index":707,"title":{},"body":{"index.html":{}}}],["used",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["user.email",{"_index":128,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["user.name",{"_index":126,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["useremail",{"_index":299,"title":{},"body":{"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{}}}],["using",{"_index":660,"title":{},"body":{"index.html":{}}}],["value",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{},"components/TestWSComponent.html":{},"injectables/WebService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/TestWSComponent.html":{}}}],["variable",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":734,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":259,"title":{},"body":{"injectables/DataService.html":{}}}],["version",{"_index":662,"title":{},"body":{"index.html":{},"properties.html":{}}}],["visit",{"_index":726,"title":{},"body":{"index.html":{}}}],["void",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{},"components/TestWSComponent.html":{}}}],["web.service",{"_index":424,"title":{},"body":{"components/TestWSComponent.html":{}}}],["webservice",{"_index":414,"title":{"injectables/WebService.html":{}},"body":{"components/TestWSComponent.html":{},"injectables/WebService.html":{},"coverage.html":{}}}],["welcome",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["whenever",{"_index":676,"title":{},"body":{"index.html":{}}}],["works",{"_index":225,"title":{},"body":{"injectables/DataService.html":{}}}],["zone.js",{"_index":654,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                NavComponent\n                                ArmaghBusinessesComponent\n                                BangorBusinessesComponent\n                                BelfastBusinessesComponent\n                                LisburnBusinessesComponent\n                                DerryBusinessesComponent\n                                NewryBusinessesComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentCity\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentCity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'foodPlaces'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport jsonData from '../assets/foodPlaces.json';\nimport { NavComponent } from './nav.component'\nimport { ArmaghBusinessesComponent } from './cities/armagh/armaghBusinesses.component';\nimport { BangorBusinessesComponent } from './cities/bangor/bangorBusinesses.component';\nimport { BelfastBusinessesComponent } from './cities/belfast/belfastBusinesses.component';\nimport { LisburnBusinessesComponent } from './cities/lisburn/lisburnBusinesses.component';\nimport { DerryBusinessesComponent } from './cities/derryLondonderry/derryBusinesses.component';\nimport { NewryBusinessesComponent } from './cities/newry/newryBusinesses.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, NavComponent, ArmaghBusinessesComponent, BangorBusinessesComponent, \n            BelfastBusinessesComponent, LisburnBusinessesComponent, DerryBusinessesComponent, \n            NewryBusinessesComponent\n            ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\n\nexport class AppComponent {\n  title = 'foodPlaces';\n  ngOnInit() {\n    console.log(jsonData);\n  }\n  currentCity: string = '';\n}\n\n    \n\n    \n        \n  Welcome to {{title}}\n\n\n \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Welcome to {{title}} '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArmaghBusinessesComponent', 'selector': 'armaghBusinesses'},{'name': 'AuthButtonComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'BangorBusinessesComponent', 'selector': 'bangorBusinesses'},{'name': 'BelfastBusinessesComponent', 'selector': 'belfastBusinesses'},{'name': 'BusinessComponent', 'selector': 'business'},{'name': 'DerryBusinessesComponent', 'selector': 'derryBusinesses'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LisburnBusinessesComponent', 'selector': 'lisburnBusinesses'},{'name': 'NavComponent', 'selector': 'navigation'},{'name': 'NewryBusinessesComponent', 'selector': 'newryBusinesses'},{'name': 'TestWSComponent', 'selector': 'testWS'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthButtonComponent.html":{"url":"components/AuthButtonComponent.html","title":"component - AuthButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authButton.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                auth-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            AsyncPipe\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                authButton.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    \n                                    Public\n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/authButton.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authButton.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Document\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(DOCUMENT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/authButton.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { DOCUMENT } from '@angular/common'; \nimport { AsyncPipe } from '@angular/common'; \nimport { CommonModule } from '@angular/common';\n\n@Component({\n    selector: 'auth-button',\n    templateUrl: 'authButton.component.html',\n    standalone: true,\n    imports: [AsyncPipe, CommonModule] \n})\n\nexport class AuthButtonComponent {\n    constructor(@Inject(DOCUMENT) public document: Document, public auth: AuthService) {}\n}\n\n    \n\n    \n        \n \n     \n        Log out \n     \n \n\n \n    \n        Log in\n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Log out                    Log in    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArmaghBusinessesComponent', 'selector': 'armaghBusinesses'},{'name': 'AuthButtonComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'BangorBusinessesComponent', 'selector': 'bangorBusinesses'},{'name': 'BelfastBusinessesComponent', 'selector': 'belfastBusinesses'},{'name': 'BusinessComponent', 'selector': 'business'},{'name': 'DerryBusinessesComponent', 'selector': 'derryBusinesses'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LisburnBusinessesComponent', 'selector': 'lisburnBusinesses'},{'name': 'NavComponent', 'selector': 'navigation'},{'name': 'NewryBusinessesComponent', 'selector': 'newryBusinesses'},{'name': 'TestWSComponent', 'selector': 'testWS'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthUserComponent.html":{"url":"components/AuthUserComponent.html","title":"component - AuthUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authUser.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            AsyncPipe\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                authUser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/authUser.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authUser.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core'; \nimport { AuthService } from '@auth0/auth0-angular'; \nimport { AsyncPipe } from '@angular/common'; \nimport { CommonModule } from '@angular/common'; \n \n@Component({ \n    selector: 'user-profile', \n    templateUrl: 'authUser.component.html', \n    standalone: true, \n    imports: [AsyncPipe, CommonModule] \n}) \n    \nexport class AuthUserComponent { \n    constructor(public auth: AuthService) {} \n}   \n    \n\n    \n         \n    Current User Details \n \n\n \n   User Name: {{ user.name }} \n   User Email: {{ user.email }} \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     Current User Details      User Name: {{ user.name }}    User Email: {{ user.email }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArmaghBusinessesComponent', 'selector': 'armaghBusinesses'},{'name': 'AuthButtonComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'BangorBusinessesComponent', 'selector': 'bangorBusinesses'},{'name': 'BelfastBusinessesComponent', 'selector': 'belfastBusinesses'},{'name': 'BusinessComponent', 'selector': 'business'},{'name': 'DerryBusinessesComponent', 'selector': 'derryBusinesses'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LisburnBusinessesComponent', 'selector': 'lisburnBusinesses'},{'name': 'NavComponent', 'selector': 'navigation'},{'name': 'NewryBusinessesComponent', 'selector': 'newryBusinesses'},{'name': 'TestWSComponent', 'selector': 'testWS'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteReview\n                            \n                            \n                                editReview\n                            \n                            \n                                getBusiness\n                            \n                            \n                                getBusinesses\n                            \n                            \n                                getLastPageNumber\n                            \n                            \n                                postReview\n                            \n                            \n                                    Private\n                                updateAverageRating\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/data.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor for DataService\nLoads saved business data\nMerges the saved data with JSON data if allowed\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteReview\n                        \n                    \n                \n            \n            \n                \ndeleteReview(businessId: string, reviewId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data.service.ts:244\n                        \n                    \n\n\n            \n                \n                        Deletes an existing review for a business\nFinds the business and review by their IDs\nRemoves the review and recalculates the average rating\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                businessId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID of business\n\n                                            \n                                        \n                                        \n                                                reviewId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID of review\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                returns true if the review was successfully deleted, otherwise false\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editReview\n                        \n                    \n                \n            \n            \n                \neditReview(businessId: string, reviewId: string, reviewData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data.service.ts:193\n                        \n                    \n\n\n            \n                \n                        Edits an existing review for a business\nFinds the business and review by their IDs\nUpdates the review content and recalculates the average rating\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                businessId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID of business\n\n                                            \n                                        \n                                        \n                                                reviewId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID of review\n\n                                            \n                                        \n                                        \n                                                reviewData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    updated review data\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                returns true if the review was successfully updated, otherwise false\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBusiness\n                        \n                    \n                \n            \n            \n                \ngetBusiness(businessId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                businessId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBusinesses\n                        \n                    \n                \n            \n            \n                \ngetBusinesses(page: number, cityId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Fetches businesses for a specific page and city\nRetrieves businesses associated with the specified city ID\nApplies pagination to the list of businesses\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    the number of page\n\n                                            \n                                        \n                                        \n                                                cityId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'c_arm'\n                                            \n\n                                            \n                                                    ID for each city\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                an array containing the city data with pagination\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLastPageNumber\n                        \n                    \n                \n            \n            \n                \ngetLastPageNumber(cityId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data.service.ts:109\n                        \n                    \n\n\n            \n                \n                        Fetches the last page number for a specific city\nDetermines the total number of pages based on the city data\nDivides the total number of places by the page size\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cityId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'c_arm'\n                                            \n\n                                            \n                                                    ID for each city\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                the total number of pages for the city's places\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postReview\n                        \n                    \n                \n            \n            \n                \npostReview(businessId: string, review: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data.service.ts:126\n                        \n                    \n\n\n            \n                \n                        Submits a new review for a business\nFinds the business by ID and adds the new review\nUpdates the business's average rating and review count\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                businessId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID for each business\n\n                                            \n                                        \n                                        \n                                                review\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the review details\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                returns true if the review was successfully added, otherwise false\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateAverageRating\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAverageRating(place: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data.service.ts:228\n                        \n                    \n\n\n            \n                \n                        Updates the average rating of a business\nCalculates the new average based on all existing reviews\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                place\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    business data containing the reviews\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/data.service.ts:19\n                        \n                    \n\n            \n                \n                    Number of businesses per page for pagination\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport jsonData from '../assets/foodPlaces.json'\n\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class DataService {\n\n    /**\n     * Number of businesses per page for pagination\n     */\n    pageSize: number = 10;\n\n    /* Works but doesnt do correct page size\n    getBusinesses(page: number) {\n        return jsonData;\n        let pageStart = (page - 1) * this.pageSize; \n        let pageEnd = pageStart + this.pageSize; \n        return (jsonData as any[]).slice(pageStart, pageEnd);\n    }\n    */\n\n    /**\n     * Constructor for DataService\n     * Loads saved business data\n     * Merges the saved data with JSON data if allowed\n     */\n    constructor() {\n        // Load saved data from localStorage\n        const savedData = localStorage.getItem('businessData'); // Get businessData from localStorage\n\n        // Check if any data was retrieved from localStorage\n        if (savedData) { // If there is \n            const parsedData = JSON.parse(savedData); // Convert savedData\n            // Update jsonData with savedData\n            if (Array.isArray(parsedData)) { // Check if parsedData is in an array before proccessing\n                for (let i = 0; i  city.city_id === cityId);\n\n        if (!cityData) return []; // Return an empty array if the city is not found\n\n        // Apply pagination to the places array\n        let pageStart = (page - 1) * this.pageSize; // Calculate the start index for the page\n        let pageEnd = pageStart + this.pageSize; // Calculate the end index for the page\n        \n        /*\n        // Console log to verify data\n        console.log('Total places:', cityData.places.length);\n        console.log('Getting places from:', pageStart, 'to', pageEnd);\n        console.log('Places in this page:', cityData.places.slice(pageStart, pageEnd).length);\n        */\n       \n        // Return the city with paginated places\n        return [{\n            _id: cityData._id,\n            city_name: cityData.city_name,\n            places: cityData.places.slice(pageStart, pageEnd)\n        }];\n    }\n\n    getBusiness(businessId: string) {\n        // First, search through all cities\n        for (const city of jsonData as any[]) {\n            // Then search through each city's places\n            const place = city.places?.find((p: any) => p._id?.$oid === businessId);\n            if (place) {\n                return [{\n                    _id: city._id,\n                    city_name: city.city_name,\n                    places: [place]  // Return just the one place in the same format as getBusinesses\n                }];\n            }\n        }\n        return [];  // Return empty array if not found\n    }\n\n    /**\n     * Fetches the last page number for a specific city\n     * Determines the total number of pages based on the city data\n     * Divides the total number of places by the page size\n     * @param cityId ID for each city\n     * @returns {number} the total number of pages for the city's places\n     */\n    getLastPageNumber(cityId: string = 'c_arm') { \n        // Get city data by ID\n        const cityData = (jsonData as any[]).find(city => city.city_id === cityId);\n        // Get the total number of places \n        const totalPlaces = cityData?.places?.length; \n        // Calculate and return the total pages\n        return Math.ceil(totalPlaces / this.pageSize);  // Diveded by \n    } \n\n    /**\n     * Submits a new review for a business\n     * Finds the business by ID and adds the new review\n     * Updates the business's average rating and review count\n     * @param businessId ID for each business\n     * @param review the review details \n     * @returns {boolean} returns true if the review was successfully added, otherwise false\n     */\n    postReview(businessId: string, review: any): boolean { \n        // Create a new review with provided details\n        let newReview = { \n            author_name: review.author_name, \n            content: review.content, \n            rating: Number(review.rating),\n            date_posted: new Date(),\n            review_id: `review_${Date.now()}`,\n            userEmail: review.userEmail\n        }; \n        \n        // To track if the business was found \n        let businessFound = false; // Can be changed after being declared since of let\n        \n        // Go through city data to get the business\n        for (const city of (jsonData as any[])) {\n            if (!city.places) continue; // Skip if the city has no places\n            \n            const place = city.places.find((p: any) => p._id?.$oid === businessId); // Find the business by ID\n            if (place) {\n                // Start ratings if needed\n                if (!place.ratings) { // Checks\n                    place.ratings = {\n                        average_rating: 0,  // Default average rating\n                        review_count: 0,\n                        recent_reviews: []\n                    };\n                }\n    \n                // Add new review\n                place.ratings.recent_reviews = place.ratings.recent_reviews || []; // Ensure the list exists\n                place.ratings.recent_reviews.push(newReview); // Add the new review\n\n    \n                // Update review statistics\n                const oldCount = place.ratings.review_count || 0; // Previous review count\n                const newCount = oldCount + 1; // Increment the review count\n                const oldTotal = (place.ratings.average_rating || 0) * oldCount; // Total rating before the new review\n                const newTotal = oldTotal + newReview.rating;  // Add the new review rating to the total\n                \n                place.ratings.review_count = newCount; // Update the review count\n                place.ratings.average_rating = Number((newTotal / newCount).toFixed(1)); // Update the average rating\n                \n                businessFound = true; // Mark the business as found\n                localStorage.setItem('businessData', JSON.stringify(jsonData)); // Save updated data to localStorage\n                break; // Exit the loop once the business is found\n            }\n        }\n        \n        // Handle the case where the business was not found\n        if (!businessFound) {\n            console.error('Business not found:', businessId); // Log error\n            return false; // Return false if fails\n        }\n    \n        return true; // Return true if the review was successfully added\n    }\n    \n    /**\n     * Edits an existing review for a business\n     * Finds the business and review by their IDs\n     * Updates the review content and recalculates the average rating\n     * @param businessId ID of business\n     * @param reviewId ID of review\n     * @param reviewData updated review data\n     * @returns {boolean} returns true if the review was successfully updated, otherwise false\n     */\n    editReview(businessId: string, reviewId: string, reviewData: any): boolean {\n        // Go through the city data to locate the business and review\n        for (const city of (jsonData as any[])) {\n            if (!city.places) continue; // Skip if the city has no places\n            \n            const place = city.places.find((p: any) => p._id?.$oid === businessId);  // Find the business by ID\n            if (place?.ratings?.recent_reviews) {  // Ensure the business and reviews exist\n                const reviewIndex = place.ratings.recent_reviews.findIndex(\n                    (r: any) => r.review_id === reviewId // Locate the review by ID\n                );\n    \n                if (reviewIndex !== -1) { // If the review is found\n                    // Update the review with the new\n                    place.ratings.recent_reviews[reviewIndex] = {\n                        ...reviewData, // Merge the updated data\n                        review_id: reviewId, // Keep the original review ID\n                        edited: true, // Mark the review as edited\n                        edit_date: new Date(), // Add the edit date\n                        userEmail: reviewData.userEmail || place.ratings.recent_reviews[reviewIndex].userEmail // Keep the email\n                    };\n                    \n                    this.updateAverageRating(place); // Recalculate the average rating\n                    localStorage.setItem('businessData', JSON.stringify(jsonData)); // Save updated data to localStorage\n                    return true;\n                }\n            }\n        }\n        return false; // Return false if the review was not foun\n    }\n\n    /**\n     * Updates the average rating of a business\n     * Calculates the new average based on all existing reviews\n     * @param place business data containing the reviews\n     */\n    private updateAverageRating(place: any) {\n        if (place.ratings?.recent_reviews?.length) { // Check if there are reviews to calculat\n            const reviews = place.ratings.recent_reviews; // Get the list of reviews\n            const totalRating = reviews.reduce((sum: number, r: any) => sum + Number(r.rating), 0); // Calculate the total rating\n            place.ratings.average_rating = Number((totalRating / reviews.length).toFixed(1)); // Update the average rating\n        }\n    }\n    \n    /**\n     * Deletes an existing review for a business\n     * Finds the business and review by their IDs\n     * Removes the review and recalculates the average rating\n     * @param businessId ID of business\n     * @param reviewId ID of review\n     * @returns {boolean} returns true if the review was successfully deleted, otherwise false\n     */\n    deleteReview(businessId: string, reviewId: string): boolean {\n        let reviewDeleted = false; // To track if the review was deleted\n        \n        // Go through the city data to locate the business and review\n        for (const city of (jsonData as any[])) {\n            if (!city.places) continue; // Skip if the city has no places\n            \n            const place = city.places.find((p: any) => p._id?.$oid === businessId); // Find the business by ID\n            if (place?.ratings?.recent_reviews) { // Ensure the business and reviews exist\n                const reviewIndex = place.ratings.recent_reviews.findIndex(\n                    (r: any) => r.review_id === reviewId // Locate the review by ID\n                );\n    \n                if (reviewIndex !== -1) { // If the review is found\n                    // Remove the review\n                    place.ratings.recent_reviews.splice(reviewIndex, 1); // Delete the review\n                    \n                    // Update review count\n                    place.ratings.review_count = place.ratings.recent_reviews.length;\n    \n                    // Recalculate average rating\n                    if (place.ratings.recent_reviews.length > 0) { // If there are remaining reviews\n                        const reviews = place.ratings.recent_reviews; // Get the remaining reviews\n                        const totalRating = reviews.reduce((sum: number, r: any) => sum + Number(r.rating), 0); // Calculate the total rating\n                        place.ratings.average_rating = Number((totalRating / reviews.length).toFixed(1)); // Update the average rating\n                    } else {\n                        place.ratings.average_rating = 0; // Set the average rating to 0 if no reviews remain\n                    }\n    \n                    reviewDeleted = true; // Mark the review as deleted\n                    localStorage.setItem('businessData', JSON.stringify(jsonData)); // Save updated data to localStorage\n                    break; // Exit the loop once the review is deleted\n                }\n            }\n        }\n    \n        return reviewDeleted; // Return true if the review was deleted, otherwise false\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                AuthButtonComponent\n                                AuthUserComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'; \nimport { RouterOutlet } from '@angular/router'; \nimport { AuthButtonComponent } from './authButton.component';\nimport { AuthUserComponent } from './authUser.component';\n\n@Component({ \n  selector: 'home', \n  standalone: true, \n  imports: [RouterOutlet, AuthButtonComponent, AuthUserComponent], \n  templateUrl: './home.component.html', \n  styleUrl: './home.component.css' \n}) \n\nexport class HomeComponent { }\n    \n\n    \n        \n  Food Places\n\n\n\n \n \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Food Places  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArmaghBusinessesComponent', 'selector': 'armaghBusinesses'},{'name': 'AuthButtonComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'BangorBusinessesComponent', 'selector': 'bangorBusinesses'},{'name': 'BelfastBusinessesComponent', 'selector': 'belfastBusinesses'},{'name': 'BusinessComponent', 'selector': 'business'},{'name': 'DerryBusinessesComponent', 'selector': 'derryBusinesses'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LisburnBusinessesComponent', 'selector': 'lisburnBusinesses'},{'name': 'NavComponent', 'selector': 'navigation'},{'name': 'NewryBusinessesComponent', 'selector': 'newryBusinesses'},{'name': 'TestWSComponent', 'selector': 'testWS'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/nav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                navigation\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                            RouterModule\n                                AuthButtonComponent\n                                AuthUserComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'; \nimport { RouterOutlet, RouterModule } from '@angular/router'; \nimport { AuthButtonComponent } from './authButton.component';\nimport { AuthUserComponent } from './authUser.component';\n\n@Component({ \n  selector: 'navigation', \n  standalone: true, \n  imports: [RouterOutlet, RouterModule, AuthButtonComponent, AuthUserComponent], \n  templateUrl: './nav.component.html' \n}) \n \nexport class NavComponent { }\n\n    \n\n    \n         \n    Food Places NI \n     \n         \n            Home \n         \n         \n            Armagh \n         \n         \n            Bangor \n        \n         \n            Belfast \n        \n         \n            Derry/Londonderry \n        \n         \n            Lisburn \n        \n         \n            Newry \n        \n         \n            Test \n        \n     \n    \n        \n    \n    -->\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     Food Places NI                           Home                               Armagh                               Bangor                              Belfast                              Derry/Londonderry                              Lisburn                              Newry                              Test                                  -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArmaghBusinessesComponent', 'selector': 'armaghBusinesses'},{'name': 'AuthButtonComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'BangorBusinessesComponent', 'selector': 'bangorBusinesses'},{'name': 'BelfastBusinessesComponent', 'selector': 'belfastBusinesses'},{'name': 'BusinessComponent', 'selector': 'business'},{'name': 'DerryBusinessesComponent', 'selector': 'derryBusinesses'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LisburnBusinessesComponent', 'selector': 'lisburnBusinesses'},{'name': 'NavComponent', 'selector': 'navigation'},{'name': 'NewryBusinessesComponent', 'selector': 'newryBusinesses'},{'name': 'TestWSComponent', 'selector': 'testWS'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TestWSComponent.html":{"url":"components/TestWSComponent.html","title":"component - TestWSComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TestWSComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/testWS.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                testWS\n            \n\n\n\n            \n                styleUrls\n                ./testWS.component.css\n            \n\n\n\n            \n                templateUrl\n                ./testWS.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cityId\n                            \n                            \n                                testResults\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                testGetPlaces\n                            \n                            \n                                    Private\n                                testGetReviews\n                            \n                            \n                                    Private\n                                testGetSinglePlace\n                            \n                            \n                                    Private\n                                testPostReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, webService: WebService)\n                    \n                \n                        \n                            \n                                Defined in src/app/testWS.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        webService\n                                                  \n                                                        \n                                                                        WebService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/testWS.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        testGetPlaces\n                        \n                    \n                \n            \n            \n                \n                        \n                    testGetPlaces()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/testWS.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        testGetReviews\n                        \n                    \n                \n            \n            \n                \n                        \n                    testGetReviews()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/testWS.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        testGetSinglePlace\n                        \n                    \n                \n            \n            \n                \n                        \n                    testGetSinglePlace()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/testWS.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        testPostReview\n                        \n                    \n                \n            \n            \n                \n                        \n                    testPostReview()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/testWS.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cityId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '67267637aeb441ea7afa163a'\n                    \n                \n                    \n                        \n                                Defined in src/app/testWS.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/testWS.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component} from '@angular/core';\nimport { DataService } from './data.service';\nimport { WebService } from './web.service';\n\n@Component({\n  selector: 'testWS',\n  templateUrl: './testWS.component.html',\n  styleUrls: ['./testWS.component.css']\n})\n\nexport class TestWSComponent {\n  testResults: string[] = [];\n  cityId: string = '67267637aeb441ea7afa163a';\n  \n  constructor(private dataService: DataService, private webService: WebService) {}\n  \n  ngOnInit() {\n    this.testGetPlaces();\n    this.testGetSinglePlace();\n    this.testGetReviews();\n    this.testPostReview();\n  }\n\n  private testGetPlaces() {\n    const filters = {\n      type: 'all',\n      selectedMeal: 'all',\n      min_rating: 0,\n      sortBy: 'name',\n      sortDirection: 'asc'\n    };\n    \n    this.testResults.push('Testing getPlaces...');\n    \n    this.webService.getPlaces(this.cityId, 1, filters).subscribe({\n      next: (response) => {\n        console.log('getPlaces response:', response);\n        if (response && response.places) {\n          this.testResults.push(`getPlaces: PASS (Retrieved ${response.places.length} places)`);\n        } else {\n          this.testResults.push('getPlaces: FAIL (Invalid response format)');\n        }\n      },\n      error: (error) => {\n        console.error('getPlaces error:', error);\n        this.testResults.push(`getPlaces: FAIL (${error.message})`);\n      }\n    });\n  }\n  \n  private testGetSinglePlace() {\n    const testPlaceId = '67267637aeb441ea7afa163b'; \n    this.testResults.push(`Testing getPlace with ID ${testPlaceId}...`);\n    \n    this.webService.getPlace(this.cityId, testPlaceId).subscribe({\n      next: (response) => {\n        console.log('getPlace response:', response);\n        if (response) {\n          this.testResults.push('getPlace: PASS');\n        } else {\n          this.testResults.push('getPlace: FAIL (Place not found)');\n        }\n      },\n      error: (error) => {\n        console.error('getPlace error:', error);\n        this.testResults.push(`getPlace: FAIL (${error.status}: ${error.message})`);\n      }\n    });\n  }\n\n  private testGetReviews() {\n    const placeId = '67267637aeb441ea7afa163b';\n    this.testResults.push(`Testing getPlaceReviews for place ${placeId}...`);\n\n    this.webService.getPlaceReviews(this.cityId, placeId).subscribe({\n      next: (response) => {\n        console.log('getPlaceReviews response:', response);\n        this.testResults.push(`getPlaceReviews: PASS (Retrieved reviews)`);\n      },\n      error: (error) => {\n        console.error('getPlaceReviews error:', error);\n        this.testResults.push(`getPlaceReviews: FAIL (${error.status}: ${error.message})`);\n      }\n    });\n  }\n\n\n  private testPostReview() {\n    const placeId = '67267637aeb441ea7afa163b';\n    const testReview = {\n      author_name: 'Test User',\n      content: 'Test Review Content',\n      rating: 5,\n      userEmail: 'test@example.com'\n    };\n\n    this.testResults.push('Testing postReview...');\n\n    this.webService.postReview(placeId, testReview, this.cityId).subscribe({\n      next: (response) => {\n        console.log('postReview response:', response);\n        this.testResults.push('postReview: PASS');\n        // Clean up by deleting the test review if you have the ID\n        if (response && response._id) {\n          this.webService.deleteReview(this.cityId, placeId, response._id).subscribe();\n        }\n      },\n      error: (error) => {\n        console.error('postReview error:', error);\n        this.testResults.push(`postReview: FAIL (${error.status}: ${error.message})`);\n      }\n    });\n  }\n}\n\n\n    \n\n    \n        \n    Test Report\n    \n        @for (report of testResults; track report) {\n            {{ report }}\n        }\n    \n\n\n\n  \n\n    \n\n    \n                \n                    ./testWS.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Test Report            @for (report of testResults; track report) {            {{ report }}        }      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArmaghBusinessesComponent', 'selector': 'armaghBusinesses'},{'name': 'AuthButtonComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'BangorBusinessesComponent', 'selector': 'bangorBusinesses'},{'name': 'BelfastBusinessesComponent', 'selector': 'belfastBusinesses'},{'name': 'BusinessComponent', 'selector': 'business'},{'name': 'DerryBusinessesComponent', 'selector': 'derryBusinesses'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LisburnBusinessesComponent', 'selector': 'lisburnBusinesses'},{'name': 'NavComponent', 'selector': 'navigation'},{'name': 'NewryBusinessesComponent', 'selector': 'newryBusinesses'},{'name': 'TestWSComponent', 'selector': 'testWS'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TestWSComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebService.html":{"url":"injectables/WebService.html","title":"injectable - WebService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WebService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/web.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                pageSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deletePlace\n                            \n                            \n                                deleteReview\n                            \n                            \n                                editReview\n                            \n                            \n                                getPlace\n                            \n                            \n                                getPlaceReviews\n                            \n                            \n                                getPlaces\n                            \n                            \n                                postReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/web.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deletePlace\n                        \n                    \n                \n            \n            \n                \ndeletePlace(cityId: string, placeId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cityId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                placeId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteReview\n                        \n                    \n                \n            \n            \n                \ndeleteReview(cityId: string, businessId: string, reviewId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cityId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                businessId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reviewId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editReview\n                        \n                    \n                \n            \n            \n                \neditReview(businessId: string, reviewId: string, reviewData: any, cityId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                businessId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reviewId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reviewData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cityId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlace\n                        \n                    \n                \n            \n            \n                \ngetPlace(cityId: string, placeId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Get a list of places with optional pagination and filtering\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cityId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID of the city containing the place\n\n                                            \n                                        \n                                        \n                                                placeId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID of the place to get\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                place details\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaceReviews\n                        \n                    \n                \n            \n            \n                \ngetPlaceReviews(cityId: string, placeId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cityId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                placeId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaces\n                        \n                    \n                \n            \n            \n                \ngetPlaces(cityId: string, page: number, filters: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Get a list of places with optional pagination and filtering\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cityId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    ID of the city to fetch places from\n\n                                            \n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                            \n                                                    Page number for pagination\n\n                                            \n                                        \n                                        \n                                                filters\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    Filters for places (type, rating, meal preferences, sorting)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                the list of places\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postReview\n                        \n                    \n                \n            \n            \n                \npostReview(businessId: string, review: any, cityId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                businessId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                review\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cityId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:2000/api'\n                    \n                \n                    \n                        \n                                Defined in src/app/web.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/web.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class WebService {\n  // Number of items per page for pagination\n  pageSize: number = 10; // Default page size\n\n  // Backend API base URL\n  private apiUrl = 'http://localhost:2000/api';\n  \n  constructor(private http: HttpClient) {}\n\n  /**\n   * Get a list of places with optional pagination and filtering\n   * @param cityId ID of the city to fetch places from\n   * @param page Page number for pagination\n   * @param filters Filters for places (type, rating, meal preferences, sorting)\n   * @returns the list of places\n   */\n  getPlaces(cityId: string, page: number = 1,  filters: any = {}): Observable {\n    let url = `${this.apiUrl}/cities/${cityId}/places`; // Backend url to get all places from a city\n\n    // Query parameters\n    const params = new URLSearchParams({\n      pn: page.toString(), // Page number\n      ps: this.pageSize.toString() // Page size\n    });\n \n    // Type filters\n    if (filters.type && filters.type !== 'all') { // Default to all\n      params.append('type', filters.type); // Filter by type\n    }\n\n    // Rating filters\n    if (filters.min_rating !== undefined && filters.min_rating > 0) {\n      params.append('min_rating', filters.min_rating.toString()); // Minimum rating filter\n    }\n\n    // Meal filters\n    if (filters.selectedMeal && filters.selectedMeal !== 'all') {\n      params.append(filters.selectedMeal, 'true'); // Meal preference filter\n    }\n\n    // Sort\n    if (filters.sortBy) {\n      params.append('sort_by', filters.sortBy); // Sorting field\n      if (filters.sortDirection) {\n        params.append('sort_order', filters.sortDirection); // Sorting direction\n      }\n    }\n\n    // Append query parameters to URL\n    url = `${url}?${params.toString()}`;\n    console.log(`Making API call to: ${url}`); // To help debug API URL \n    return this.http.get(url); // Perform HTTP GET request\n  }\n\n  /**\n   * Get a list of places with optional pagination and filtering\n   * @param cityId ID of the city containing the place\n   * @param placeId ID of the place to get\n   * @returns place details\n   */\n  getPlace(cityId: string, placeId: string): Observable {\n    console.log('Making API request to:', `${this.apiUrl}/cities/${cityId}/places/${placeId}`); // Endpoint for specific place\n    return this.http.get(`${this.apiUrl}/cities/${cityId}/places/${placeId}`); // Perform HTTP GET request\n  }\n\n  deletePlace(cityId: string, placeId: string): Observable {\n    return this.http.delete(`${this.apiUrl}/cities/${cityId}/places/${placeId}`);\n  }\n\n  // Get the reviews of a place\n  getPlaceReviews(cityId: string, placeId: string): Observable {\n    return this.http.get(`${this.apiUrl}/cities/${cityId}/places/${placeId}/reviews`);\n  }\n\n\n  // Delete a review\n  deleteReview(cityId: string, businessId: string, reviewId: string): Observable {\n    return this.http.delete(\n      `${this.apiUrl}/cities/${cityId}/places/${businessId}/reviews/${reviewId}`\n      );\n  }\n\n  // Post a new review\n  postReview(businessId: string, review: any, cityId: string): Observable {\n    const reviewData = {\n      author_name: review.author_name,\n      content: review.content,\n      rating: Number(review.rating),\n      userEmail: review.userEmail\n    };\n    \n    return this.http.post(\n      `${this.apiUrl}/cities/${cityId}/places/${businessId}/reviews`,\n      reviewData\n    );\n  }\n\n  // Edit an existing review\n  editReview(businessId: string, reviewId: string, reviewData: any, cityId: string): Observable {\n    const updateData = {\n      author_name: reviewData.author_name,\n      content: reviewData.content,\n      rating: Number(reviewData.rating),\n      userEmail: reviewData.userEmail\n    };\n\n    return this.http.put(\n      `${this.apiUrl}/cities/${cityId}/places/${businessId}/reviews/${reviewId}`,\n      updateData\n    );\n  }\n}\n\n\n  /*\n  // Get places for any city with filters\n  getPlaces(cityId: string, page: number = 1, filters: any = {}): Observable {\n    let url = `${this.apiUrl}/cities/${cityId}/places`;\n    \n    // Build query parameters\n    const params = new URLSearchParams({\n      pn: page.toString(),\n      ps: this.pageSize.toString()\n    });\n\n    // Add type filter\n    if (filters.type && filters.type !== 'all') {\n      params.append('type', filters.type);\n    }\n\n    // Add rating filter\n    if (filters.min_rating !== undefined && filters.min_rating > 0) {\n      params.append('min_rating', filters.min_rating.toString());\n    }\n\n    // Add meal filter\n    if (filters.selectedMeal && filters.selectedMeal !== 'all') {\n      params.append(filters.selectedMeal, 'true');\n    }\n\n    // Add sorting\n    if (filters.sortBy) {\n      params.append('sort_by', filters.sortBy);\n      if (filters.sortDirection) {\n        params.append('sort_order', filters.sortDirection);\n      }\n    }\n\n    // Append query parameters to URL\n    url = `${url}?${params.toString()}`;\n    console.log(`Making API call to: ${url}`); // For debugging api url\n    return this.http.get(url);\n  }\n\n  // Get a specific place\n  getPlace(cityId: string, placeId: string): Observable {\n    return this.http.get(`${this.apiUrl}/cities/${cityId}/places/${placeId}`);\n  }\n\n  // Get reviews for a place\n  getReviews(cityId: string, placeId: string): Observable {\n    return this.http.get(`${this.apiUrl}/cities/${cityId}/places/${placeId}/reviews`);\n  }\n\n  // Post a new review\n  postReview(cityId: string, placeId: string, review: any): Observable {\n    const formData = new FormData();\n    formData.append(\"username\", review.username);\n    formData.append(\"comment\", review.comment);\n    formData.append(\"stars\", review.stars);\n    \n    return this.http.post(\n      `${this.apiUrl}/api/cities/${cityId}/places/${placeId}/reviews`, \n      formData\n    );\n  }\n  */\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/authButton.component.ts\n            \n            component\n            AuthButtonComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/authUser.component.ts\n            \n            component\n            AuthUserComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/business.component.ts\n            \n            component\n            BusinessComponent\n            \n                96 %\n                (32/33)\n            \n        \n        \n            \n                \n                src/app/cities/armagh/armaghBusinesses.component.ts\n            \n            component\n            ArmaghBusinessesComponent\n            \n                92 %\n                (24/26)\n            \n        \n        \n            \n                \n                src/app/cities/bangor/bangorBusinesses.component.ts\n            \n            component\n            BangorBusinessesComponent\n            \n                92 %\n                (23/25)\n            \n        \n        \n            \n                \n                src/app/cities/belfast/belfastBusinesses.component.ts\n            \n            component\n            BelfastBusinessesComponent\n            \n                92 %\n                (23/25)\n            \n        \n        \n            \n                \n                src/app/cities/derryLondonderry/derryBusinesses.component.ts\n            \n            component\n            DerryBusinessesComponent\n            \n                92 %\n                (23/25)\n            \n        \n        \n            \n                \n                src/app/cities/lisburn/lisburnBusinesses.component.ts\n            \n            component\n            LisburnBusinessesComponent\n            \n                92 %\n                (23/25)\n            \n        \n        \n            \n                \n                src/app/cities/newry/newryBusinesses.component.ts\n            \n            component\n            NewryBusinessesComponent\n            \n                92 %\n                (23/25)\n            \n        \n        \n            \n                \n                src/app/data.service.ts\n            \n            injectable\n            DataService\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/nav.component.ts\n            \n            component\n            NavComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/testWS.component.ts\n            \n            component\n            TestWSComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/web.service.ts\n            \n            injectable\n            WebService\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.0.0\n        \n            @angular/common : ^19.0.0\n        \n            @angular/compiler : ^19.0.0\n        \n            @angular/core : ^19.0.0\n        \n            @angular/forms : ^19.0.0\n        \n            @angular/google-maps : ^19.0.3\n        \n            @angular/platform-browser : ^19.0.0\n        \n            @angular/platform-browser-dynamic : ^19.0.0\n        \n            @angular/platform-server : ^19.0.0\n        \n            @angular/router : ^19.0.0\n        \n            @angular/ssr : ^19.0.4\n        \n            @auth0/auth0-angular : ^2.2.3\n        \n            @compodoc/compodoc : ^1.1.26\n        \n            bootstrap : ^5.3.3\n        \n            bootstrap-icons : ^1.11.3\n        \n            express : ^4.18.2\n        \n            jquery : ^3.7.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFoodPlaces\nThis project was generated using Angular CLI version 19.0.4.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverDistFolder   (src/.../server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(serverDistFolder, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    The request handler used by the Angular CLI (dev-server and during build).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dirname(fileURLToPath(import.meta.url))\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideHttpClient(), provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration(withEventReplay())]\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRoutesConfig(serverRoutes)\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
